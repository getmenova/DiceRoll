(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    109939,       2069]
NotebookOptionsPosition[    107695,       1991]
NotebookOutlinePosition[    108035,       2006]
CellTagsIndexPosition[    107992,       2003]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Il Calcolo delle Probabilit\[AGrave] per le Scuole Superiori\n",
  FontSize->36,
  FontColor->GrayLevel[0]],
 StyleBox["Amerigo Mancino, Bartolomeo Lombardi, Andrea Segalini", "Author",
  FontSize->16,
  FontColor->GrayLevel[0]],
 StyleBox["\n",
  FontSize->16,
  FontColor->GrayLevel[0]]
}], "Title",
 CellChangeTimes->{{3.6721125776788607`*^9, 3.672112587488381*^9}, {
  3.672112658780295*^9, 3.6721127410011883`*^9}},
 TextAlignment->Center],

Cell[CellGroupData[{

Cell["1. Introduzione", "Section",
 CellChangeTimes->{{3.672112743307108*^9, 3.67211276724469*^9}, {
  3.6721128778668203`*^9, 3.672112882871624*^9}, {3.672112914026764*^9, 
  3.672112915232586*^9}, {3.672112966562393*^9, 3.672112994093842*^9}, {
  3.672113188528625*^9, 3.672113192081991*^9}, {3.672113253806538*^9, 
  3.672113267088422*^9}}],

Cell[TextData[{
 "La Teoria delle Probabilit\[AGrave] \[EGrave] forse una delle branche pi\
\[UGrave] affascinanti della Matematica. Vi \[EGrave] mai capitato, giocando \
a Monopoli o a Dungeons & Dragons, che, lanciando i dadi, uscisse proprio il \
punteggio che volevate evitare? Avete mai partecipato a qualche gioco a premi \
in cui avevate comprato molti biglietti, senza riuscire tuttavia a vincere \
qualcosa?\n",
 StyleBox["\[LeftGuillemet]Che sfortuna!\[RightGuillemet]",
  FontWeight->"Bold",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 ", sar\[AGrave] stato il vostro primo pensiero. Molto spesso, in questi \
casi, infatti, siamo portati a credere a miti, storie, false credenze. Come \
dimenticare il buon vecchio ferro di cavallo o il quadrifoglio portafortuna? \
Proprio lei, la Fortuna, divinit\[AGrave] venerata dagli antichi greci come \
entit\[AGrave] generatrice degli eventi in maniera favorevole o sfavorefole \
ad un individuo, sembra essere la causa prima di circostanze non spiegabili \
razionalmente. La scienza, tuttavia, ancora una volta, riesce a mettere al \
bando tutto questo, fornendo una teoria concreta e coerente per affrontare \
questo genere di situazioni. Nei prossimi paragrafi andremo ad analizzare il \
concetto di \
\[OpenCurlyDoubleQuote]probabilit\[AGrave]\[CloseCurlyDoubleQuote] e vedremo, \
anche tramite esempi pratici, come applicare questa teoria in semplici casi \
piuttosto verosimli. \nCarichiamo dunque per prima cosa il package ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " che abbiamo creato:"
}], "Text",
 CellChangeTimes->{{3.67211326925077*^9, 3.6721134581710176`*^9}, {
   3.672113492136977*^9, 3.6721136611907063`*^9}, {3.672113735181714*^9, 
   3.672114038475952*^9}, {3.672114077971511*^9, 3.672114103365088*^9}, {
   3.6721141682989483`*^9, 3.672114279668131*^9}, {3.6721143163271093`*^9, 
   3.6721143486858177`*^9}, 3.6721146334896708`*^9, 3.672114697981059*^9}],

Cell[BoxData[
 RowBox[{"<<", " ", "FondamentiDiProbabilita.m"}]], "Code",
 CellChangeTimes->{{3.672114374160486*^9, 3.6721143827651043`*^9}}],

Cell[TextData[{
 "Diamo dunque alcune definizioni di base che ci saranno \
d\[CloseCurlyQuote]aiuto per comprendere appieno ci\[OGrave] di cui stiamo \
parlando.\n\n",
 StyleBox["Definizione.\n",
  FontWeight->"Bold"],
 "Un ",
 StyleBox["evento",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " \[EGrave] un qualsiasi fatto che, a seguito di una prova, pu\[OGrave] \
accadere oppure no; la ",
 StyleBox["probabilit\[AGrave] di un evento",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " \[EGrave] invece la probabilit\[AGrave] oggettiva di questo.\n\n\
Banalmente, il lancio di un dado \[EGrave] un evento, \
l\[CloseCurlyQuote]estrazione di un sette di cuori da un mazzo di carte \
\[EGrave] un altro evento, cos\[IGrave] come pescare una biglia bianca da un \
sacchetto con sfere bianche e nere \[EGrave] ancora un altro evento. Ma \
possiamo considerare anche casi pi\[UGrave] eclatanti: \
l\[CloseCurlyQuote]estrazione dei biglietti vincenti della Lotteria Italia, i \
numeri del SuperEnalotto o della Tombola, il Sette e Mezzo sono tutti giochi \
basati sulla probabilit\[AGrave] e sul verificarsi o meno di determinati \
eventi.\nUn evento certo (ossia un evento che sicuramente accadr\[AGrave]) ha \
probabilit\[AGrave] 1, mentre un evento impossibile ha probabilit\[AGrave] 0. \
Di conseguenza, la probabilit\[AGrave] di un evento, come definita sopra, \
\[EGrave] un numero compreso fra 0 e 1.\n\nIl calcolo diretto della \
probabilit\[AGrave] \[EGrave] applicabile solo ad eventi che possono essere \
ricondotti ad uno schema di casi. Prendiamo in considerazione il lancio di un \
dado a sei facce. Supponiamo di desiderare l\[CloseCurlyQuote]uscita di un \
numero pari da questo evento (ossia 2,4 oppure 6). I casi possibili tuttavia \
sono in numero maggiore: il dado pu\[OGrave] restuirci 1,2,3,4,5 o 6. Allora, \
dando in input alla seguente funzione un numero di casi favorevoli pari ad 1 \
ed un numero di casi possibili pari a 2, otteniamo il risultato desiderato:"
}], "Text",
 CellChangeTimes->{{3.67211366211733*^9, 3.672113664172353*^9}, 
   3.672114357137917*^9, {3.672114407684277*^9, 3.672114447778171*^9}, {
   3.672114708862668*^9, 3.672114713177679*^9}, {3.672114814552896*^9, 
   3.672114896259818*^9}, {3.6721149527896214`*^9, 3.67211495819322*^9}, {
   3.6721149952741327`*^9, 3.6721150955125427`*^9}, {3.672115150335479*^9, 
   3.672115193209882*^9}, {3.672115279724698*^9, 3.6721153044313803`*^9}, {
   3.672115348108848*^9, 3.672115360015448*^9}, {3.672115459651745*^9, 
   3.672115646341498*^9}, {3.6721156955603724`*^9, 3.6721157524678583`*^9}, {
   3.672115795010148*^9, 3.672115928608265*^9}, {3.672116026582623*^9, 
   3.672116074081203*^9}, {3.672116431382062*^9, 3.6721164352608767`*^9}, {
   3.6721165964298983`*^9, 3.672116611065448*^9}, {3.6721166570327044`*^9, 
   3.672116791708445*^9}, {3.672116823996018*^9, 3.672116890065607*^9}, {
   3.672116933534827*^9, 3.672116960341563*^9}, {3.672116990969636*^9, 
   3.6721170173839207`*^9}, {3.672117061966423*^9, 3.672117111439934*^9}, {
   3.672117698192212*^9, 3.672117730327649*^9}, {3.672506244828734*^9, 
   3.672506247566918*^9}, {3.672506282482089*^9, 3.672506282568886*^9}, {
   3.672549467060843*^9, 3.6725494829173*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BottoneProbabilita", "[", "]"}]], "Code",
 EvaluatorNames->{"Local" -> {"AutoStartOnLaunch" -> True}},
 NotebookAutoSave->False,
 ClosingAutoSave->False,
 ClosingSaveDialog->True,
 CloseOnClickOutside->False,
 IncludeFileExtension->True,
 FileChangeProtection->Automatic,
 TransitionEffect->Automatic,
 TransitionDirection->Horizontal,
 TransitionDuration->Short,
 RasterExploreViewRange->17,
 MarkerLineThickness->1.,
 MarkerAspectRatio->0.,
 AutoGeneratedPackage->None,
 Editable->True,
 Saveable->True,
 StyleEnvironment->Automatic,
 ScreenStyleEnvironment->"Working",
 PrintingStyleEnvironment->"Printout",
 ShowPageBreaks->False,
 WindowToolbars->{},
 RulerUnits->"Inches",
 BlinkingCellInsertionPoint->True,
 GhostCellInEmptyNotebook->True,
 CellInsertionPointColor->GrayLevel[0.7500114442664225],
 CellInsertionPointCell->None,
 Evaluator->"Local",
 EvaluationCompletionAction->{},
 PrintAction->"PrintToNotebook",
 OutputAutoOverwrite->True,
 InitializationCellEvaluation->Automatic,
 InitializationCellWarning->True,
 NotebookEventActions->None,
 NotebookDynamicExpression:>Null,
 BackgroundAppearance->None,
 BackgroundAppearanceOptions->"Fill",
 CellChangeTimes->{{3.672117410678463*^9, 3.672117411255094*^9}, {
  3.672117451437518*^9, 3.672117518622881*^9}, {3.672117555434545*^9, 
  3.672117569565634*^9}, {3.672543190233562*^9, 3.672543191236926*^9}, {
  3.672548498780836*^9, 3.672548547094803*^9}, {3.672548611057866*^9, 
  3.672548611358671*^9}, {3.672548660889318*^9, 3.6725486808732557`*^9}, {
  3.6725489137466803`*^9, 3.672548918451398*^9}},
 Magnification->1.,
 Background->GrayLevel[0.92]],

Cell[BoxData[
 RowBox[{
  ButtonBox["\<\"Probabilit\[AGrave] Classica\"\>",
   Appearance->Automatic,
   ButtonFunction:>(Private`output$326 = 
    DialogInput[{Private`favorevoli = ""}, 
      Column[{"Casi favorevoli", 
        InputField[
         Dynamic[Private`favorevoli], Number], "Casi possibili", 
        InputField[
         Dynamic[Private`possibili], Number], 
        Button["Calcola", 
         DialogReturn[
         Private`output$326 = 
          FondamentiDiProbabilita`CalcoloProbabilita[
           Private`favorevoli, Private`possibili]]]}]]),
   Evaluator->Automatic,
   Method->"Queued"], " ", 
  DynamicBox[ToBoxes[Private`output$326, StandardForm],
   ImageSizeCache->{14.399999999999999`, {11.7, 19.93}}]}]], "Output",
 CellChangeTimes->{
  3.672551775333918*^9, 3.672553672707891*^9, 3.672553780653288*^9, 
   3.672553837591221*^9, 3.6725543084283533`*^9, 3.672554359090909*^9, 
   3.672554451445136*^9, 3.672554568735503*^9, 3.672554802701035*^9, 
   3.6725548745116463`*^9, 3.6725552617316513`*^9, 3.6725553090358553`*^9, 
   3.672555348580502*^9, 3.672555422670542*^9, 3.6725554576378202`*^9, 
   3.672555506927705*^9, {3.6725555831545963`*^9, 3.6725556083883057`*^9}, 
   3.6727172322991734`*^9, 3.672718454911519*^9, 3.672718542282939*^9, {
   3.672719443860755*^9, 3.672719444577094*^9}, 3.672719768544949*^9, 
   3.673492480400548*^9, 3.673492904092477*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["O pi\[UGrave] precisamente:", "Text",
 CellChangeTimes->{{3.672117735640682*^9, 3.6721177808429413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BottoneProbabilitaN", "[", "]"}]], "Code",
 CellChangeTimes->{{3.672117766687996*^9, 3.672117778590329*^9}, {
  3.672549707052244*^9, 3.6725497115561113`*^9}, {3.672550136456966*^9, 
  3.672550136786182*^9}}],

Cell[BoxData[
 RowBox[{
  ButtonBox["\<\"Probabilit\[AGrave] Classica\"\>",
   Appearance->Automatic,
   ButtonFunction:>(Private`output$333 = 
    DialogInput[{Private`favorevoli = ""}, 
      Column[{"Casi favorevoli", 
        InputField[
         Dynamic[Private`favorevoli], Number], "Casi possibili", 
        InputField[
         Dynamic[Private`possibili], Number], 
        Button["Accept", 
         DialogReturn[
         Private`output$333 = 
          FondamentiDiProbabilita`CalcoloProbabilita[
           Private`favorevoli, Private`possibili]]]}]]),
   Evaluator->Automatic,
   Method->"Queued"], " ", 
  DynamicBox[ToBoxes[
    N[Private`output$333], StandardForm],
   ImageSizeCache->{27., {0., 10.}}]}]], "Output",
 CellChangeTimes->{
  3.6725517753642693`*^9, 3.672553672831678*^9, 3.6725537806897917`*^9, 
   3.672553837631008*^9, 3.6725543085192547`*^9, 3.67255435918318*^9, 
   3.6725544515384293`*^9, 3.67255456882366*^9, 3.672554802731557*^9, 
   3.6725548745702343`*^9, 3.67255526182377*^9, 3.67255530907238*^9, 
   3.672555348613455*^9, 3.6725554227595*^9, 3.672555457726385*^9, 
   3.6725555070261383`*^9, {3.67255558322718*^9, 3.672555608433769*^9}, 
   3.6727172323193398`*^9, 3.672718454993479*^9, 3.672718542357497*^9, {
   3.672719443945736*^9, 3.672719444657036*^9}, 3.672719768592926*^9, 
   3.6734924804194736`*^9, 3.6734929041138773`*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["\<\
Ossia la probabilit\[AGrave] che, lanciando un dado una volta esca un numero \
pari, \[EGrave] esattamente un mezzo. Questo significa che abbiamo la stessa \
probabilit\[AGrave] che esca un numero pari o un numero dispari: il 50%. \
Questo calcolo, all\[CloseCurlyQuote]apparenza quasi magico, \[EGrave] in \
realt\[AGrave] giustificato dalla Formula della Probabilit\[AGrave] Classica:\
\
\>", "Text",
 CellChangeTimes->{{3.672117846191703*^9, 3.672118021429335*^9}, 
   3.6721180546382923`*^9, {3.672118518705114*^9, 3.672118529065544*^9}, {
   3.672118562377221*^9, 3.6721185715471087`*^9}, {3.6721186780403852`*^9, 
   3.6721187198851223`*^9}, {3.672118763622015*^9, 3.672118770474082*^9}, {
   3.67211944927634*^9, 3.6721194881579847`*^9}, {3.6721195671939707`*^9, 
   3.672119593291828*^9}, {3.6721203005835238`*^9, 3.672120390268445*^9}, {
   3.672120438134718*^9, 3.672120451428342*^9}, {3.672120541428842*^9, 
   3.672120555572165*^9}, {3.6721205998275967`*^9, 3.672120626636237*^9}, {
   3.672120792465859*^9, 3.672120828807845*^9}, {3.672120871815578*^9, 
   3.6721210642088213`*^9}, {3.672121124413814*^9, 3.672121249434353*^9}, {
   3.672121302600556*^9, 3.672121369919874*^9}, 3.672121582336383*^9, {
   3.672121612852648*^9, 3.672121648955352*^9}}],

Cell[TextData[{
 StyleBox["P(A) = ",
  FontSize->24],
 Cell[BoxData[
  TagBox[
   FractionBox[
    RowBox[{"Numero", " ", "di", " ", "casi", " ", "favorevoli"}], 
    RowBox[{"Numero", " ", "di", " ", "casi", " ", "possibili"}]],
   DisplayForm]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.67212111730805*^9, 3.6721212979635277`*^9},
  FontFamily->"Arial",
  FontSize->24]
}], "Text",
 CellChangeTimes->{{3.672121656088235*^9, 3.672121662395175*^9}, {
  3.672121692732748*^9, 3.672121707972032*^9}},
 TextAlignment->Center],

Cell["\<\
Chiaramente la formula in questione \[EGrave] applicabile solo in presenza di \
uno schema di casi. Nel caso del lancio del dado, infatti, sapevamo qual\
\[CloseCurlyQuote]era la tabella dei possibili esiti. Non sempre questo \
avviene. Provate a modificare i parametri sopra. Come cambia la probabilit\
\[AGrave] del vostro evento?\
\>", "Text",
 CellChangeTimes->{{3.672121745637779*^9, 3.672121776370672*^9}, {
  3.672121998461918*^9, 3.672122047229354*^9}, {3.672506309064238*^9, 
  3.672506387026236*^9}, {3.672506528815052*^9, 3.672506973961944*^9}, {
  3.672507060313622*^9, 3.672507063111483*^9}, {3.672507105389391*^9, 
  3.672507110790114*^9}, {3.6725072446706038`*^9, 3.672507292449966*^9}, {
  3.672507323680303*^9, 3.672507360516911*^9}, {3.672507415004366*^9, 
  3.672507438127041*^9}, {3.672507510768991*^9, 3.672507514837904*^9}, {
  3.6725075714446287`*^9, 3.672507572209221*^9}, {3.6725076733618107`*^9, 
  3.672507674305101*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Il lancio di un dado", "Section",
 CellChangeTimes->{{3.672507749219702*^9, 3.672507760300048*^9}}],

Cell[TextData[{
 "Chi non ha mai giocato al classico Gioco dell\[CloseCurlyQuote]Oca o al \
Monopoli? In questo genere di giochi \[EGrave] frequente \
l\[CloseCurlyQuote]uso di un ",
 StyleBox["dado a sei facce",
  FontColor->RGBColor[1, 0, 0]],
 " per calcolare il numero di caselle con cui far avanzare una pedina. In ",
 StyleBox["Dungeons & Dragons",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 " vengono usati addirittura dadi a dieci o venti facce!"
}], "Text",
 CellChangeTimes->{{3.672507773617742*^9, 3.6725077742462673`*^9}, {
   3.672551834188925*^9, 3.6725518349909973`*^9}, {3.672552109000663*^9, 
   3.672552169229372*^9}, {3.672552312241149*^9, 3.672552369088982*^9}, {
   3.672552403574696*^9, 3.672552455947743*^9}, {3.67255250899045*^9, 
   3.672552561150082*^9}, {3.6725527251090317`*^9, 3.672552730299067*^9}, 
   3.672553655121771*^9, {3.672553918726842*^9, 3.67255395303434*^9}, {
   3.672555188197886*^9, 3.672555203306391*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DadoTreD", "[", "]"}]], "Code",
 CellChangeTimes->{{3.6725552448141403`*^9, 3.672555246383444*^9}, {
  3.672555313274066*^9, 3.672555314558358*^9}, {3.6725554262896976`*^9, 
  3.672555437254801*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Texture[
     FormBox[
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1:eJztnQtMVFcaxxEYlZqiqGhIbZFHbENJTa2KD7TBakUCaFEa8BFB5SEoCsJq
qVTr6kgXqVlZYtw1porxURdo5RGjuAv4QKsNVBlJibTGFdBVEGEBa1n+e84Z
YY0ZKAN3Zjpzvl9yZOQ+POf87jn3+w7Xi8uqDUGR1lZWVpuGsj+Cwjf7JCSE
f7LYlv1lzieJEats2IdPWdnKCv8mCKIX7t+/j6NHj2Lfvn3IyMgQ5cXPVJQv
L/fvqVOn8OTJE4N6LikpwdKlS+Hm5gY+LVAxbfHw8EBcXByuXbumqOfy8nIs
WbIE1tbW4t8ZNGgQXFxc4OPjg5iYGOzatQtqtVp8pWKYwvt3586diIqKwqxZ
szBu3Lhu7zY2Nli9ejWqqqoG7DozMxMjR44U57W3t0dYWBjOnTuHpqYmtLW1
KXA1EfrS2tqKhoYGZGdnIyQkpNu7s7MzLl682O/zpqWldZ8rMDAQZWVlCtaa
UIqioiJ4eXkJT6NGjUJubq7e59i/f3+366SkJHR0dBigpoRS1NbWYuHChcKX
g4MDiouL+3xsdXU1xo4dK45NTk42YC0JJWlpaYG/v7/w5uTkBI1G85vH8HEc
EBAgjvH19aVxbWbU19fD29tb+Fu2bBk6Ozt73T8/P1/E3zxGq6ioMFItCSW5
dOkS7OzsoFKpcOXKlR7342OZx2X82ti0aZMRa0goDV8n4R6Dg4N73KempkbE
dyNGjEBlZaURa0cozdWrV4Vv7vLWrVs69+E5Pd+Hx/aEecNjtxkzZgifeXl5
OvcJDw8X2/k6DmH+8Dya+4yMjNS5ff78+WI7XycnzJ/U1NRe52tPT0/ybUGc
PHlS+Jw6darO7Y6OjmLt/cKFC0auGWEIeMzGf8Y1efJkndt5zj106FBcvnzZ
yDUjDAHPsQYPHky+JeHmzZvkWyLIt1yQb7kg33JBvuWCfMsF+ZYL8i0X5Fsu
yLdckG+5IN9yQb7lgnzLBfmWC/ItF+RbLsi3XJBvuSDfckG+5YJ8ywX5lgvy
LRfkWy7It1yQb7kg33JBvuWCfMtFT76tIgvFV2l8//ormmtr0f7wIX8Jmalr
YzBkHt8PqqvxzeefY0dQENRz5mD7O+/gj6wf1B98ADX73pm0NDz6+WdTV1NR
ZPT903ff4S+hoYgZPRo7hg/HARcX5Lz5Ji5Nm4Z/vvce/j5hAva//jq2vfoq
Njo54VBsLP71ww+mrrYiSOWbzdPfpqZiDXOczlz/6O+P9tWrgY0btWX9eiAu
Tvt5wwb8Z9UqlM+di+2vvIJoR0dcOXHC1C0YMLL4ftrUhIMREYhlbS1l4xjr
1mndxsQA/F1kugrfxrz/d+1anGZzfTTrh+OJieJeb67I4vsg8xdrbY2fPvoI
SEgAoqN79vxyYb75MRXz5mGVlRXyv/jC1M3pNzL4vnDkCCJtbaHx9QXi44Go
qL677ir8GDbPX5w5E2vt7aE5c8bUzeoXlu678e5dbHR2xrceHv133VX4nMDO
cYjFcp9OmoR2do8wNyzd96mtW5GkUuEp98Xi7H677irsvv9w6VLE2tjg4uHD
pm6e3liy7/YnTxDv7o4CNhZ53DVg112FxfFHXF3xJz8/UzdRbyzZ993r17HR
wQE1gYHaXEsp3+zaKZ8zB4lvvIFHNTWmbqZeWLLvArUaacz3LyyPFjG2Ur7Z
faGRzenbWB5/NSvL1M3UC0v2/RUbh5lOTto8WynXz+O2Tpabb2Nxeq6Z5WaW
7DuT+c4YP16bbyvpm8f47BrayvrmWGqqqZupF5bs+yDLlzNee00bqw0kD9Pl
m8Xp29l8nr17t6mbqReW7Ltg1y58OXo0OtasUfb+zeby1rAwbBs2DP/IzDR1
M/XCkn3fOn8eiSNG4F5QkHa9XMH4vPLDD7GFxef/VuD37xoTS/bd+vgx4t3c
UDRlirL5NztXjqcnknv4nRC/ZyzZN+crlnd/xurfwedzJeZ0Ppez/C5RpUJh
erqpm6c3lu67TqPBOkdHlM6YMfA4ncdp8fH4xsMD8a6uaKqtNXXz9MbSfXMK
WM4UZ2uLu4sXD2xeZ/H+jwEBWMv645KZrbN0IcPzip1Pn+JL5voPrJ2NK1Zo
n1/pa34WEaH9uRibG+4FB2P9oEE4xJ+DMFNkGN+c5ro67J47F0lDhmh/Ds7n
dh6z9+ade37+jNM1Hx9sYP2UuWwZ2hoaTN2cfiOLb047i9cPs/tvFJvbs9zd
8SA0VPvM0vPn1YRbXvhndi08Y2P73scf46/jxmEN64OvU1LQ0d5u6mYMCJl8
d3H5xAnseP99rGPt+vOYMch7911cnjYNGjb+b82bh/OsLyrY56y33hKe9/j5
ofLsWVNXWxFk9M3paGtDRX4+/hYWhiSWn6ewmHsbi7k/Gz8eCW+/ja/ZHP49
uy6+Lyw06+cTX0ZW3y/SyXzy/1fygOVu9aw/fmHzvqVCvuWCfMsF+ZYL8i0X
5FsuyLdckG+5IN9yQb7lgnzLBfmWC/ItF+RbLsi3XJBvuSDfckG+5YJ8ywX5
lgvyLRfkWy7It1yQb7kg33JBvuWCfMsF+ZYL8i0XffVdVlZm5JoRhkCj0fTq
e8yYMbC2tkZpaamRa0YYAj5uuc8p/B1lOpg4cSKsrKxQUlJi5JoRhuD48ePC
59Qe3h3n5+cnttP4tgzUarXw6eXlpXN7RESE2J6SkmLkmhGGID4+XviM6eEd
U+np6WJ7T/d3wnxoaWkR8zj3efr0aZ373L59W8To9vb2KC8vN3INCSXh92Tu
2sHBAZWVlTr3efbsGYKCgsR+6/m7qgizZdGiRcLjCv7OwV4oKiqCSqUSY5zn
64T5UVBQgCFDhmDYsGG4fv36b+7v6+srrg2etzWY8fsFZaSpqQmTJk0S/tby
d0T3gRs3bsDNza07tmttbTVwLQklaG9vR2hoqPDm4eGBurq6Ph+bk5Mj1uL4
sSEhIXj06JEBa0oMlMePH2PlypXCF5/Lz/Tjd54eOHAAw4cPF+eYPn06CgsL
DVBTYqDk5uaKNRXuyc7ODlkDeH/32bNn4erqKs7FC7+GsrOz0djYqGCNCX2p
r6/HsWPHsHz58m437u7uPeba+lBdXY3o6Gix9t51bn5/mDlzJmbPni3iO74W
u2DBAioGLLyPeX97e3sLt10u+PydkJCAO3fuKHAl/R9+T+Dn5eO9695OxTSF
z9sTJkxAcnIyiouLFfX8Ms3NzaiqqkJeXh727NmDLVu2UDFC2bx5M/bu3Svy
a74WytdMCYIgXuR/0wP1yg==
         "], {{0, 123}, {124, 0}}, {0, 255}, 
         ColorFunction -> RGBColor], 
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Selectable -> False], BaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {124, 123}, PlotRange -> {{0, 124}, {0, 123}}], 
      TraditionalForm]], 
    Polygon3DBox[
     NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[1, 2]}}, {{0.5, 0.5, 
      0.5}, {-0.5, 0.5, 0.5}, {-0.5, -0.5, 0.5}, {0.5, -0.5, 0.5}}],
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}, 
   {Texture[
     FormBox[
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1:eJztnQtUVcUaxwuREEkM8BXIw/djaS5DYi1EUfGRjwpl5Uk0RBFFAeURXBBE
QcpX3ZWaWV5RK/VqKaY3JBd6dYFcTULFWD7wgZAopgIHBEHhf78ZxKQQDpx9
NuKe31rTwbP3PrPP/M7MfDN7t8d21sLJ3novvfRSkCH9Z7Jn6IjAQM+wKfr0
j5FhwXNmtaI/wiiFU2Jvogmo1WrcuXNHJBlTaWlpU1Q1isrKShw+fBjh4eFw
cXFB586dYWhoiNatW4skQzIyMkL37t2hUqmwZs0aXLhwQXLHu3btwsiRI6Gv
rw9W/WuSsbExrK2tYWVlJZKOEitfS0tL6Onp1Sp7c3NzzJw5E2fOnNHa79Wr
VzFjxownn92xY0e4u7tj7969+Omnn/DLL7/g8uXLyMrKEklHiZXvxYsXcezY
MV7mX3/9NRwdHWFgYMCdmJqaYuXKlaioqGiS47Nnz6J///5P6m1YWBiuXLmi
9W9HoD3l5eVITk6Gq6vrkzo4ffp0lJWVNepzzp07h549e/Lj7ezskJ6erqMz
FmgDi5m2bt2Kdu3acVesrS0pKdHoWPabcHZ25sfZ29vj+vXrOj5bgbbs27eP
t7nMGWvDNYHFcmx/W1tb0U63IOLi4nisxvrrU6dO1btvZmYmzMzMuGd2nKDl
wNpwNuZi7t5555169w0ICOD7vf3227yvF7QsWFxlYmLCx7+JiYl17nPr1i0+
VmP7/PzzzzKfoUAqAgMDeV1lY+u6+OGHH/h2GxsbPqcpaJkkJSVxjxYWFigo
KPjb9piYGL7dz88PVVVVzXCGAilg7XLfvn3x8ssv4/Tp07W2FRcXw8nJiXtm
4zFBy6Zm/mTVqlW13s/Ly0OXLl2E5xeEKVOmcJfe3t613s/JycGrr74qYrAX
hODgYO6ZXZt4mtzcXO75tddeQ1pamuT53qBxecp332HLrFmIdXHBP0aMQLSz
M9ZNmoSk9etxITUVlY2cmxU8m9WrV3PPH374Ya33n/bc0FxKY8hNT8d6d3f4
deqE4LZtEWdlhf1vvIEEBwcctLPDju7dsZjen9OmDaKHD8eve/cCIgbUGtYv
y+H50YMH+D4yEr7m5lhtaor00aNRQnUZ8+cDCxeyCRlg0SLA1xelXl7Ipv5k
m60t/I2M8Nnkybh79arW56Bk5PD8sLQUa6kOz6V80kaOBA3Uqt36+ABz5wIs
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

         "], {{0, 121}, {122, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Selectable -> False], BaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {122, 121}, PlotRange -> {{0, 122}, {0, 121}}], 
      TraditionalForm]], 
    Polygon3DBox[
     NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[1, 2], Rational[-1, 2]}}, {{0.5, 0.5, 0.5}, {
      0.5, -0.5, 0.5}, {0.5, -0.5, -0.5}, {0.5, 0.5, -0.5}}],
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}, 
   {Texture[
     FormBox[
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1:eJztnQtUVVUaxwuQh5ggL5XGmVHzhT10UFzmjE7lCDGpYIqGTYQKEg9FQBRH
EqeVpGaa6aiMayQNjUiXoa5KIaRGyHI0RUQ0RVQQeYgg8hDkP993EMZpUu7l
nHNv3Lv/a2253rvvvnuf39nf/vbz9J01f0qgySOPPBJpSf9M8V/0XESEf8zL
ZvSf52OiAmaZ0otFFGIo8JsQEiLV1dUhPT0ds2fPxvDhw9GtWzfw7SGCboKt
rS3c3Nwwb948fPvtt2hqalKUb0ZGBtzd3dt+z8TEBA4ODhg4cCA8PT3h5eWF
yZMni6Bw4Ovq4eGBfv36wd7e/n+uv7e3N06dOiWb7e3btxEREQEzMzMp7f79
+yM4OBhff/01SkpKUFpaivr6ety5cwcNDQ0iKBz4urL9vH79unS99+/fDz8/
P/Tq1Uvi0b17d8THx3eYb21tLXx8fKS0LCwssGDBAly5ckX2fSMkX+fOncOc
OXPa6nVISAju3r2rVRp8//j6+krfZxtx4MABlXIrJEfbt2+HpaWlxCkmJkar
7yYmJrbxzczMVCmHQkpo586dUltqbm6ucV3Mzc1ts/ebNm1SOYdCSmj58uUS
LxcXF8lHak+hoaFS/EmTJqGxsVEHORSSq+rqari6ukrc1q1b99C4RUVF6NGj
h+RjHTlyREc5FFJCSUlJEuO+ffs+tC5v2LBBivfSSy+hublZhzkUkivuw44e
PVri99FHHz0wHve7Oc7bb7+tw9wJKSXu3zK/N95442c/LywslMatrK2tpf6X
UOfTN998IzEeM2aMNHbyU3355ZcwNTWFo6MjysvL9ZBDIbnKycmRGNvY2ODS
pUv/9/knn3wifT5gwABUVFToIYdCcpWXlyeNbzJH7gP/VK2Mee6B22+l1Hjr
Fi5mZ+MY9c+P7N+PY/v24VxmpvS+kLLiMW3uI7fHeOLEidJYplzlE8ctgYGI
HTkSsWT/Fz32GCLs7BBD99kSsiVLR4zAe76+yD10SPZvCbWI29hhw4a1y5j7
TXIYF58+jU2vvYYgKyus7dkTB4nxVW9v1M2Zg6bgYNwJCMDVKVPwBfXZP3B2
RgjF+2D6dFw5cUJO8YRIZWVlePrpp1VlfPLzzxFEXNfY26OAOCI0FAgPB0JC
APbng4JaAv+f/HyEhaHw5ZfxPn0niL7zXUqK3GIatdRm/P3evQjs1g2fDhki
scO8ecDcuQDZ6wcG/pzjUdhD7UiAhQWO7t6tRHGNUmoyvvTddwikdnbv4MEt
9ZNsMsgmP5Rva+B4XMcjInCA8udHnHPT0pQqtlFJLcaNNTVYRn3uhF/9Cpg/
v4WXJmx/Gvh7ZNc//O1vsezZZ6V0hbSTWowzt21DqKkpKl99tcVGd4Rva6D2
u8bfHxFmZvh87Voli28UUoNxQ10dllMd3sNtMPtWcvi2BkrnsyefRKybG+pF
H1orqcG45Nw5hJE/XOzj0+JDK8GYfO6r06YhuGtXXKR2XkhzqcH40LvvIp4Y
11Pft8Pt8M+0y3covdV2dvhi5UqlL4NBSw3Gm319keDsrFk/SZtA7Tr7Xptf
f13py2DQUoPxSmL8j379lGuLW/tS1I/aSW1yPKUvpLnUYLzqlVeQ0Levsow5
UB97F/lxawRjraQG4x1BQfh7r14tY5MK2+rE3/wGCcJWayU1GH+/cyeWOzjg
9uzZLWNbCvlcNcR2mY0NshITlb4MBi01GFddu4bwxx/HWU/PFr9LoTp8wctL
Ghstzs9X+jIYtNRg3Hz3LjZQm7yxZ8+WcUyF2uJ/kk8d7+GBxtpapS+DQUut
sczTBw8iwNwcP06a1DIfoelcxM/503SfFE+fjnCqwz+kpipZfKOQmvNOCbNm
4U0rK9QxKx7v0pYzx6fv3SEfLo7S2ThzplLFNiqpyZjb5RhXV6ywtkYDM9PW
blNbznzX29sjivrFFQUFCpXauKT2GoHyS5cQ9cwzEufS11777/qPh7Hlzyle
uZ8fVtH3FlCfuOziRSWKa5TSxVqfm5cvYxX5SjzX+BnxrmbW3Eazz83zjvcH
6iPdfPVV7KN44dSex0+YgOti7b4s6YIxq7mhAYc2bUI0sYumuvle797IGDUK
eZTuWW9vnKR7IHvsWHxLTBfa2SF80CAcWL0aUPgME2OUrhi36k51Nf6VnIyP
Fy/GchcXzHN0hD/1sebS33eI+dm9e5G9bx/qbtyQ/VtCLdI14/tVW1GBiqtX
cb2oCBUUagVXVaRPxkK6kWBs+BKMDV+CseFLMDZ8CcaGL6Nm3NiISj5zMi8P
OQcOIO/QIVw7fRqV166h2YDKaoyM66hfnrljB9bzmgNnZ0Q4OuJNBwfEUoik
13N798ZaT09kfvgh6ior9Z1d2TI2xt8Q2xgqb5SFBbb3748fPDxwcdIkVEyf
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
P+xGzQ==
         "], {{0, 119}, {121, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Selectable -> False], BaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {121, 119}, PlotRange -> {{0, 121}, {0, 119}}], 
      TraditionalForm]], 
    Polygon3DBox[
     NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[1, 2], Rational[1, 2]}}, {{0.5, 0.5, 0.5}, {
      0.5, 0.5, -0.5}, {-0.5, 0.5, -0.5}, {-0.5, 0.5, 0.5}}],
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}, 
   {Texture[
     FormBox[
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1: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
Txi82ycM3u0TBu/2CYN3+4Q18F5w/77yTlvY4FkC5YHs9HSz3kGqBo+C9+yM
DFw8fBirvb3x5bBh+PKvf8WiTp2w9J13sHTIEKzi9+f277fbd1vJ+972LlmC
IHd3BA8YgMDOnRHUrRuCBw1CML87FBKC1KtXy1RHufJeUIDoHTsQ0KYNxlSr
hrlOTso5AnuaNcPRdu2wp2lT/G/Dhvic38s726a1b4+I9etRUMZ3tdkKrp87
h9ARI+Dm7Az/6tWxtH59bHZxwZG2bXGwVSts+POflfOAJ1M3Y+vWxcYpU5Ac
E2NRXeXF+y32z8C//Q0elStjU/PmiO3fHwVF7x1WzieQ+uWz6OzgePbtzS1a
YBxlC+J9qVeuWFSvrWBvUBA+rV0bi2vVwum338ad4cML31krRXQjpUhXt4YO
xYk33sBM9g3PBg2s8v20grioKAS8+ipmODjgar9+he9glfoedraO6V2sPj5I
IuezHB3h9eKLuHL8uNl1WzvkfEd5p/7YSpVwUM6hKHof80Pf31x0ZphcI+95
3UIf6V6lCnbMnGlWvXrzfuvaNXj/5S8IrlcPWXLetblnj1CuXLY1hOOBJ31e
0vnzZtVv7VhHGxj/5JO48N57/39Ouppzgk3vIuc9J2n7I/mM74ODVderJ+85
WVkIHjxYeRdxtiXvWTcVyihny8yj3c9nDJh7755qGawZERs3Ku/VP8s2iW+z
SDdFY+UhV1eMpD+9eOiQqrr15P3QihUYzWcn0FeX+YwhypnOcW0i+/UPX32l
WgZrRUZiIjwZw26RM7PLeo6ucE/9LqdPnc3YP1fFeeB68Z4tZ4G3bo0N9PGa
nAVe9N763YxrZay/l5KiSg5rxZ4FCwrPDGVepsk5e4wLbjIH9uRYH7l1a6n1
68X7qW3blDPJU+QcO63OD+Rz0j/6CF5s21Ezzjq3NsiZT5Np5weYn2lyBrwU
sSva/NrGjbHwnXdKPV9PL963TJuGRTVrans+nhQ+L4iyhEk7bRSxkZGY4OSE
uIEDC/MWrXRD3qPefBMe9Pel5b26nCPG/jy3TRt8z9xNc94p72HayTzmPDk2
Op+3izmXxKg54uO1OkOuyB+mMI6Wsxx+3LChRBn04P12UhK85OyTnj114f23
Pn3g9ac/4daNG2bp21qwgrlNUO3ahbauRdxjKozv5EySqdWrY9fixSXKoAfv
qeTdnbyclbPjdOA99oMPMJrPT2E9togvyPsSyq/Z2G4qRecD+9GXbAwMLFEG
PXhPJx/jOMb83KuXPrwPGIAJ9CdpzIVsEcuEd63PzzXxTl8/lX5++6JFJcqg
y/ieno45L7+McFdXXXj/ibFLgIsLMm00l9seEICFzs7IK/LNmumGscLdESMQ
ULUq/lXK2Wt68F7Aa1ZTjhDxZTrE82G09VDKUmCje0DO7N0Ln2eeUc4L0yzH
LdLNWcZU3vQlSWfPliiDXnnc0fXrMZn9TtMz7tmf5dxBn0qVsLOUuMWakZma
Cm/m2ce6dNHW1zNe2E4/68PyIC+vRBn04j0jIQHeDRsW5nJaxS9FaxCPw/nA
66iTuQ4OhWcDauHr+ZxcfvpXq4bvliwptX495+c3TZ2KSU8+ibuffFL2+Qm2
S9ZmZrFda238LHBB/JkzGENff7Rjx7KfBy7xHPvRnpdegi/9SIaKPEdP3jOT
k5W9NSsbNSrk3dI5CrmP7ZK5/klNmiDj+nXVMlgzttAuPCtWRPLgwWXz9+w3
kuOMrFAB4WFhqurWe/39SkQExvDerc2bF7ZN9hWobY+s3RbtMTjYvj3cqlTB
z4yJHhfkZ2Up52VPYxx0i7o1e12uaA32OuND38qVESbfqUR57Lc5vmYNRnEs
++aFF3Bf9l5I+0y2/7A9BkU2nkM9/JN9ZiT9e3hIiNl1WztuxcVhWrt2CGD7
/tO/f6HPl75eEv/yf2I/tKNzvXphIn3G4r59C/ckq4Q5vA8fPtzi/XW/HjmC
Ka1bw499W/aGSQyi5Him/WPSDtMeO3Key/4g87zTqleHD/376W+/taheW8Cd
xESsYvwyhjxs5DiWLrZv2m8l+pAxsohn+Swg77LmupJx8yjmNpv8/JB965ZZ
dXrx2Wp578/+mJuba3n7OC6vYj2e9epheo0aiu8/3rUrzr/1Fq6yv54nzxHs
E5KDznB0xPjatbGCviw9NtbiOm0Jsk8loG1beD79NMKefx6HOnXC6W7dcLl3
b1x5912coK4u8ucNzZphFMe8Ofzdkj2VghHMr4X3CaXEyMJ7ixYtkJGRYVE9
v0fir7/iAHON2ZTbh9xPd3HB9Pr14degASbTJxxjbn4wNBTXfvmlzHXZGmSu
M2rnTvwP7dm7ZUtMffFFTKddT2M/mMhxchNt/eTq1ThF//dAxb6aP4LYbnvG
S8K7t4wrJUB4d5G50cxMi+r6IxQUFCDn9m2kxcTgP8eP48a5c8jR8Pm2jjzy
mhkfj/ioKMSdOoV7N25o8ncr+fn5aMk+JbwvLmX+qyH7XG363cuXL5e5XgOP
FomMJ56n/6jKWCsyMrLEazt06KD0j68egz2N9o61a9cqXDZjnJBXynyuH2NG
uVZyOQO2DVMO96nkyqXgOMffGozBxTecPHmyHKQzoAdiGEtJrFahQgV89913
pV4v8cSwYcOUftKvX78y5XMGHg2EQ5mDEQ67d++OHJV/d37mzBk4ODgo961Z
s0ZnKQ1oje3M9StWrIgqzP0Pqfy7GhMWLFig8F6nTh0cOXJEJwkNaI3o6Ggl
Dxfu/P39zb5f8ve33367mPvw8HDthTSgKSRXa9SokcKZzNckJydb9By5r0eP
HspznJ2dMXPmTNyw0T3NjzNSU1Mxf/581KtXT+HK1dUVcXFxZXpmSkoKhgwZ
ojxPisz/zJ49W/EnEvOVlhca0B4yDye6P3/+vMJ327Zti/np27cvrl27pkk9
wu26devQqlWr4uc7Ojoqv3fs2FGZ+5f1Hg8PD6PoWETH7u7u6Ny5M1q3bo1a
tWoV89G0aVOEhobi/v37mnD+e4jfX7lypeL7a9asWVynUR5NkbH39ddfx/Ll
y5GQkKA533+E+Ph4bNu2TZnvF19jlPIrgYGB2Lx5M2JjY5U1LwMGDBgwYMCA
ARP+DyZ4xvQ=
         "], {{0, 125}, {126, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Selectable -> False], BaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {126, 125}, PlotRange -> {{0, 126}, {0, 125}}], 
      TraditionalForm]], 
    Polygon3DBox[
     NCache[{{Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}, {{-0.5, 0.5, 
      0.5}, {-0.5, 0.5, -0.5}, {-0.5, -0.5, -0.5}, {-0.5, -0.5, 0.5}}],
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}, 
   {Texture[
     FormBox[
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1:eJztXQdYlMe6PiJRSMSImkTUYDfmKGrURA16jhoTlVhiP4qKFaQIAiIaGwEL
lthFRYzReMVuLAS7CaKxQWIBL0gsIBakKoJIee/3DeAxXsuWWZZd9n2eEWT/
/Wfme2e+MrXeaLd+9kb/+Mc/PE3on36jvDt7eIya2t+Y/tNl6qRxo8vTL1Mo
fUuJ/wglERcXh9DQUOzYscOQSijt2rULJ0+eRHp6urJ0KYXY2Fj4+fnhs88+
g7m5Obh5GFLJp3r16qFXr17YuXMn0tLSpPGblJQEb29vVKtW7Vle/Hvt2rVh
bW2NgQMHijRgwABD0kBi2fbp0wdNmzaFhYUFKlas+IyHNm3aiL5eUFCgFscH
Dx5EkyZNnr3XxsYGK1aswN27d5GSkoKsrCzk5+cbkoZTbm4uHj58KGR+/vx5
uLu74+OPP37Gi62tLR48eKASx9u2bUPlypXFe9q2bSv0hLrtxgB5uHPnDmbM
mPHMhnbu3BmJiYlKvYP7cbF+4LaSmZmpodIaoC7Cw8NRt27dZ1wrarOTk5PR
smVL8b0RI0bg6dOnGi6pAeoiIiICNWvWFJz5+Pi88XnWy46OjuL5Tz/9VKo/
Z4BmwXFXhQoVYGpqiuPHj7/22QsXLgh9zc8fO3ashEpogAxwH7W3txd9tGfP
nsjLy3vlsw4ODuK5IUOGlGAJDZCFq1evokqVKjA2NsbRo0df+kx8fLyIicuV
KyfGXQzQTbi6uoq+yvb3ZWD9zp83bNjQYJd1GMHBwYLHBg0avNSHnjlzpsL+
mgGlFxwvNWrUSPhYFy9e/NtnOTk5+PLLLwXPgYGBWiqhAbLQrl07wWVQUNDf
/s5jalZWVuKzH374QUulM0AWeLyEuZw7d+7f/s488zi2kZERDh8+rKXSGSAL
48aNEzzz/OLzYJ4/+ugjvPXWWwZfWw/A8xzM8+zZs//29+d5DgsL01LpDJAF
Nze3EuM5LzMTV8PDEbZhA4InTsSKfv2wYcwY7PP1RWRICBKjo6XkozMgXzf2
7Fmc3rwZOyZPxsoBA7B+5EjsmTED5/fsQfwLvrE6KAmen6Sm4sDSpZjTsSOc
3nkH083MsKpmTWysXx/rLS2xsFo1OJmawr1GDaweMQJxZ86olV9pR352No5Q
DONP8YwzyWIKyWQF1X1jvXpYX6cOFr/3HiaQPNxILsv690e0hPFmTfMc8fPP
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

         "], {{0, 120}, {122, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Selectable -> False], BaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {122, 120}, PlotRange -> {{0, 122}, {0, 120}}], 
      TraditionalForm]], 
    Polygon3DBox[
     NCache[{{Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[-1, 2], 
        Rational[-1, 2]}}, {{-0.5, -0.5, -0.5}, {-0.5, 0.5, -0.5}, {0.5, 
      0.5, -0.5}, {0.5, -0.5, -0.5}}],
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}, 
   {Texture[
     FormBox[
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1:eJztXQdYVFfTTkRDbLG32BW7Yo8ldk2MLUSNn8YWQUCwgYIIAqISe8cSQQlB
Y4IFK8YoYkHsKCpR7IKiggjYQEFgvncuu/zIj3B3917we/a+z3NE9u7unTPv
nJk551zO1DWzGWJZ5JNPPrH7HP8MMZ3Zc/p0U6ehRfFLLyd7CzMD/McFzRmN
XyQFChQoUKAXiIqKot27d9OUKVOoS5cu1LJlS2rRooXSCqAZGxtTx44dydzc
nP766y+6deuWLBwHBQXR2LFjqWrVqsQhPnszMDCgIkWKKE3GxjrOqfeyZcvS
0KFDac+ePZJwHB0dTfb29u/do1u3buTo6Eiurq60ZcsW+vvvv+nAgQNKk7Ed
PHiQ/Pz8aO7cueTk5ET9+vV7j39TU1O6efOm1jxfvXqV2rRpk/V97DtOnTpF
L168kMSOFGiPN2/e0MWLF4VxaGhoKPBTr149Onr0qMbfFR4eTg0bNhS+g2My
25aCjxPBwcHUq1cvgavKlSvTiRMnRH82ISGB2rVrl8Xz3bt3ZZRUgRR4+vQp
9enTR+CsVq1adP/+fVGfc3FxET7D4/r27dvyCqlAMsTHx9PXX38tcGdmZkYZ
GRl5vp/jcYkSJYT379ixo4CkVCAVQkJCqHjx4gJ/O3fu/OD70tLS6KeffhLe
N3z48HztQsHHCTs7O4HDrl270qtXr3J9D+fdnNOVKVOGzp07V8ASKpAKkZGR
9OWXXwp8Hz58ONf3LFiwQLj+7bffFrB0CqTG+PHjBS4nTpyY63X223zd3d29
gCVTIDW8vb0FLjlX49icHbw+ZmRkJFwPDQ0tJAkVSIUHDx4IOTbH4/Pnz793
7fTp01lrbmFhYYUkoQKp8PjxYypXrpzA5+bNm9+7FhgYmLXuosu6qoKPA3Fx
cdS0aVOB03Xr1r137ciRI8LrvF4WGxsryf2SExLowYULdHbLFgpau5Yu+PlR
5Jkz9KYQ1tPTUlMpEX4tAjZ9fMMGCt64ka7s20dxt25R6tu3BSME5rCvodu7
mAOH/PYbHfv1V7qEOfDjK1coJSlJ0lslJyfTwIEDBU7Xr1//3jU11x06dBDW
27RFBnR6+eBB8hw9mqbWr09OVauSG3yJW+nS5Fa+PM2E35iEvGDtf/5Dl//+
W+i/nHgWFUVHYNduyFFsa9UiV9zf7YsvyK1sWZpdoQLZVq9OM4yNyd/ZmWJk
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
3bsnC8cKFCj438J/ATgSvBU=
         "], {{0, 124}, {123, 0}}, {0, 255}, 
         ColorFunction -> RGBColor], 
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Selectable -> False], BaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {123, 124}, PlotRange -> {{0, 123}, {0, 124}}], 
      TraditionalForm]], 
    Polygon3DBox[
     NCache[{{Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}, {
       Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[1, 2]}}, {{-0.5, -0.5, 
      0.5}, {-0.5, -0.5, -0.5}, {0.5, -0.5, -0.5}, {0.5, -0.5, 0.5}}],
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}},
  Boxed->False,
  ImageSize->{360., 390.69293666342907`},
  Lighting->"Neutral",
  ViewPoint->{2.0438819073575303`, -0.7904833430807005, 2.5783100731076747`},
  ViewVertical->{-0.0169944316822455, 0.4060877270819336, 
   0.913676062510793}]], "Output",
 CellChangeTimes->{
  3.672555619933659*^9, 3.672717233876026*^9, 3.6727184556616383`*^9, 
   3.672718542847624*^9, {3.67271944402564*^9, 3.672719444745597*^9}, 
   3.672719769206614*^9, 3.673492483576092*^9, 3.673492904950762*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzVnXW4VVX3tvdLg6Qd2N0KBiB2gYogImC3YncriqiArajYrdiBiqiIgoFi
o0gpWD/jtbtd33PPOcY6cy/WPsL73+d1HQ/nnL33GvMZ9Ywxx1yrx77HDzjw
iH2PP2T/fZfZ9th9jx5wyP7HLbPNUcfqVw3/U6n8Z4C+hixT4d9ZpeL/y7JZ
32WH8D9++P/731PDt4bZUSefxb/CTxfHP70bvjUKf2LZnTp1yu589Bn765Tw
rUn+17vvvjv78MMP/VUXxVe9k3w8rzr66KP1k16n//OzX/KC+PK3k5cvvPDC
fJgEiC/nAht23Sx9+WR7Ob9eY401gnaalLz8/Pjyt2xB/HrLLbcMb5FATUve
MSy+443wrTELKr6r0rzkbUPj215P3sYyeNuuu+4a5Juv5G1D4tteM0j9bbyF
L7tiS3un/unqqpwX3/lqooziO4888sjWJe88N77zleSdvJp39evXL4i8/vrr
+yJnzZoVtPvBBx/kCkk/7Zz4aZPCt6b5p/Xt2zfbcMMNs969ewe57rzzTnt7
k2zmzJnZe++9l73yyivZM888k7388svZuHHjGvAPffrUqVOz2bNnhxc3KLni
4HjFlwtX7Ny5c9amTZtso402Cj8fccQRdsVW4SPHjx+fPffcc9m5556bHXPM
Mdn+++8fpDz44IPDxw8ZMiS75557wut0+dJLnx0v/VJirFyqbdu2ennLli31
O34+7LDDwpvj5efP7rvvvuycc85BIdmaa66ZrbTSStliiy2WzT///NlCCy2U
tWrVKmvfvn227rrrZn369MnOP//8bPTo0QEosDcR7OoTw7dm4eqrrbZa1qBB
g7D4du3aZbvsskvwLi0gXnzB7KmnnspOPfXUbLvttgsXbtasWbighM5WXnnl
bJFFFgm/l/jZfPPNlzVs2DAIs/XWW2eDBw/Onn/++VSIQVGIF00IDHnppZfO
VlhhhSB6hw4dsmWWWcbtLwqxcPbGG29kF110UdajR49slVVWyf7zn/9kyy23
XBAAmU844YTslFNOyc4777zs+OOPDxfDEJdccsmg1AUXXDDbeeeds2uvvTab
Nm2aCxO1UnkhEWbRRRcNV3FzZrkIc/jhhzcOwiyS3Xbbbdk+++yTdezYMax6
qaWWClZz3HHHBecEsZdeeil76623skmTJmWvv/569uSTT2a33357dtRRR2Wr
r756tsACCwTwERyrsuBXOTNK9JxZiIcPSaGfJJNsAvAtJuBVEaIW2eOPPx6W
vtlmmwXjQC/du3fHjvGe4BLTp08Pi2iAaWjBSLXvvvtmyy+/fPhYFsxrTZqB
UZgJiTD4ojScC4PhbLDBBtX6ah5cEyvcYYcdgmobNWqUbbzxxkFHt956K4JY
GGweBNM6wu/dDjfZZJPs6quvzmE5I0oyviBJ06ZNc0l69eoV1mC+G5XVLLvx
xhuzPfbYI/hGixYtAugHHnhg+HRJ2dJehhCvvfZaeCn65FNYADFIVzs9Xv/Z
QpaR+enKXL9hcCOLfRW/+KhRo4KpsRz0gV6IaEOHDgX71vYyVk+cvPzyy4Mq
8GlcB2B18dPixZ8pRI2tttrKLt4o+AEOaqHS1UBkxCX4Ex/cpEmTbNNNN81O
PvnkEKuwgrYWVUHglltuCS7TvHnz7IADDsD07OLjkovjgLKU/OLbbrttWJ0h
7xd///33g79hVOuss074UF4C+vxe6Cu2xYsTzu+6665s8cUXD6879NBDufip
8eJPJxcnQPTv318QR9hlAh4zc9gfeOCBECu7du0asFxiiSXyuCjYF7SLzpgx
I2hoxRVXDG5OVNdFT4kXHZtcFLG4XGNbMeFkDhdsHkLd2WefHdyO6MSHbr75
5iF8OtwLJUmMGE2w43V4hi5+crz4Uwk/wR/Si+PghJCCyxHWrrrqqhAOSRJ8
6FprrRXyk8O9SLLyhx56KKwLmzhLkVCXOile/Mnk4rhMenGslyhfFRKbhQx1
yCGHZF26dAmhrYD4YnZduX02cuTI4AeNGzfOdt99d/A9MV73ieS6eBNXbGLX
tZ+LiD/77LPZmWeemW2zzTYBScTFCVPEF7eLk8RvuummEOEBhxCui58QL/54
Elq4iD5J5CBeHDhxmwLi77zzTjZ8+PCQWPgTSGLoAOGIt7eLv/vuuyHk4Cco
dMSIEVz8+Hjx0YW4plflF8d3SWGFuAaMqJaICQ/AbaEjF154IYgvZddFxksv
vTR8KkoZMGAA1z0uXvexwnXl2fro6FjoBygVhMyxmofMdtppp4XcTtbGEngN
v8MEgHtpu/Lbb78duBIOSAqwKx8br/xoIZIKXrtyo9x4CsEMDnDJJZeEQI/9
IyBRHbivv/76APeydnFS78CBA4Oj4gS8Rpc6Jl78kUIkFW75xbfYYots2WWX
LcJNzofxEZLRHzlCYSjAPXbs2OXtum+++WZ24oknBh8gddh1j47XHZVcl6BD
EPXrsmCPkLljNQ9Z/aSTTgpioWIyHOiniK9gF4dnEPYwByWHEER1qaPixR9O
Lo70XLa5XZwLl3iXZ/GePXtmq666asjiIA4/BfFXX321spJdnOR50EEHBVq4
4447kgYxqyPjxR9KLo5BcNkGZmj9FLB21juiKPp/g2y99dYzKsx6Io+uIwtk
KZyXS3A5HD/RRWUVEwnx99prr+A9JCET6Ygo0oNJtIHFpSJtL5vuLJvtJ8Pw
LAeVcX6RKOixxx4LtIs4j+FyMaLRGWeckStoVRMIMoiPtm7dOtAuE+jwKNAD
iUCQ6FSgdRQ2OsrZNlpttTwU22uKSnvxxRcDv0BeMjUvg6mmSlvdBIKlolzW
hbUY4TgsCnRfgYTWsa2GWRfhvosYxbqtW+cC4TakvoLfkmy4MNRKig2rJzsi
O5wela1pAk2cODHQCRQCqibQoVGgewvhSp9kCDXOesuCekuAXeVXOyit7dyz
Z646HIaoX+XTzUMGhJ2RUMmE+HWqOpGSylrhtY2zF154IaQAIh6qEx4Vk+qe
glQKjLlUW2i9u6o42lXG1Fdwde/aNZcKS4C9WJB1qSARFHvbb799qKsodTAU
ePwNN9wQ9Le2wQVx5PWEGlIfCUGSWYfm7kKMJZK7YGsqAwMVgvF9nQUWyPWI
CbthiZa6Hj2F7bbbbiEKYDQE9lSP6yZkcsKECdnaa68dggtljwQbEAW7qxB/
Zaq5YOtCrfhU++oy//y5YOQ6Zz6JHtEVcYICA2ZB8O3WrVsgBvfff3/QYwcT
DFIqQXPOR7CWYAdHwUYmghHwCNAu2IbQsESw7ZdYIheMgIfJFmID7MT5IEgB
KKpKVblewoAfffTREOSxCoxQgh0UBbszEQw3gwG7YJvIFVPBdlVR4rQJ4ymJ
EbAC54owFmTH1uBjpFhUuUHCFUHYuSKRVmIcGAW7IxGM8FcXtJpk2yhoVQlG
yuvb10EjOCWsykGD2JA2Ie+wJbQJB0q1uWHCJ++4446cTxLtJckBUbbbS0i0
B9SdxF5MLn6n/zfMelvZH19RV9uQYwqahQihIf5MYeU9FMwQjolmOye8E20T
gQgf0AgJuX8U8jYTcodefXKy7UL2IZ4VhNxaFXG1kI2DSlCNlZ9Jry2ypssu
uyyQVLyRa6DqPffcM6h63LhxlY0SknrllVcG2GFORtn2i5LeWk9+6l0iaRfC
i0nqMY8wlLT0HE50SOyifOBPUATyF3WJ67xrwmgJN7wOVzAh941C3lzIWdB4
z1n9LRCnQq4t6yoKiVGSoAphBioG7SJF8GfYEDonhbjONykhv0Qs44H7RCFv
KmQMmXguZG+RmaKQqxk9S4WEBaNLq31dSDgP6AAyZQvBF0dD3dQBqHuzEpJM
YjYh945C3lgQUp+WC9mrxHs6EoZMSHdxfHKOTNIiJ3F4AgiCEjbnKn/wwQdR
+eYFUg2vpZNivHavKOcNhSwnJ8jl7NG+/RxyrhOdrEpOSgTvYiUah9tBvvEr
SCY+RqPPNS7CXdmyQL4JNEQFE3LPKOT1hYxHYnEhN8MEC0KuVyIkWQTuVAhF
8D0n6ZgaWY0m1957751rfOsSkr7TTjs5Ad0jCnldoTwhybiQneAERQePMbWq
TscpSpqTzgGh7QBNUCdokzjJkKbxbRLmDl2EiRDTTc7do5zXllQyLudaNEcL
cnZIwHQ56VDDEQrJB0oI76Tc4qMBE1px7LHHBotF491MSJprVG3ohOBlXHW3
KOQ1JRWPC9lROX4O94klSJWQ1BSgVNA4xIquHuDBUjBLXgIvdY1vlzB8r1zo
b5mQu0Yhr05COqkpFXJb5d+ikOvLA6uFbBwiDTDNmXxahIRCJwRd8jc8GJZA
8ErUvr2RbEyZwhU6QgeHXS+TdEQiqZGaupBJ3i5IumYCp3dSLL0Wkw/kBo8G
bdgXLyMFpDrvkZQBEBPP45QB/aOEV5ZUS8F1G5lI60YrqBKJwgzVFQIPxNFr
AKI3cZQYhYZpEj/zzDOVHZMagB0E8EV0kr2u3y9KdUUhisujLKA0zvql3Exf
GycRfldRiiIXQhpnuXnKaZFNnjw5kEnqAtIIERAcUTKLMCX3LJQGnp3YNZG8
faO8wwvyilzl8m5Q59uhqOq+1VZVTYReYolpwEx7hso+Di59QSI1qQRjRJfo
G793fe9Uo1wg/0vYXaKwlxeEFX3Jhe2YFlgrr5z1zGuc6FprK99tr1TlwsIo
nA0nlgDRhPnCgGnyE1+xBIzPLWHnQgnhTJ0CU+GnTxT2skKeVPy3i7fItlBU
2IWSXAJvK5raV2EtaF9W0FGCdlK+6LjEEi4rPoqWq+JSi5Bd6IfSa8GwyTIE
USIEhvDwww8jY59CYVFoBu8cxb20pBRrYvhtJZHgxh1btcqroD5KZxsrvEDs
O+vCCgrGlRqHKA0gSWKqpNQT4kOUBzgCJZEAa2BHCmvoWyg3vIO83377IV/v
KPElicRok/TpEq+hRNZFeaJj+/a5xN1lf4HtyZQhKluGjaOIMOiSoAvpCQpK
2QEVgMRDw6nfsIYrrrgiWEP/QtnhHWfyvkTbKQp7cUnd5sJ2kxmuIwvZIfev
xlkXsw73vY4LLpgLyyYdRVDBHEjiVBhUHghJnsQc0Abc2Mxh16T4wKILnepe
Ud6LEnm9lmtqstGt6y+bs3iVrRfpdAi6XRNW6nGM7V3fKFDUdHnxdfyfXE6M
xy4hILwM+mnWsHtSh1xwwQV5f9vYc88o74VJvjLTq8xnKHckDyVxtw9G0L+/
w+k1eyFNQUbZJKL84Hq8jDYM22mu+z2T8oMNxEL7e8co2wUlhZzLtgUzIIls
/aTXnt27pzX7HES5Rc5B8XSKTJwIwlxQ9V5J4UEkhQXCp028HlG8YUlU3bF3
X+JzpaWJt1NddZS3FDbr0MHFAxunyEmGYmuMfWDchBLTXaKg2X2SeoOsVOij
7xDFG1oI+goaJp4qzDrR6ogdiaBQsBOZC7VRJaWgFB00LfEq/k40xSxdz/sl
RQd9XRaTNN23j5IOKUgqJ8wl7Ys/F3myDRakZSZQzcGTW4QETpOZHE8ihxYQ
81gYgzBsq0rh+5ucKo0D+GSEpBO/XZTzvEJm0vXqEPWYk8i5eUnNTjInfBdi
EE4KAaXuoNLk4wELcNkEZyTjjTfeOLCk7oBrGVvuHuU8t6SIczl3Lekt7ADN
r5KzcajSCrstlZSIQjoxS8CEv7jmacuMHz++cnBSfJAgsHbIjEnaLUp6TiIp
eYJUlEtagiid/GK5SRPSw5CSniMKNfXiAxAIpISjVPMy5wFJ/UG2wkCwapNz
2yjn4ERO9hO5cn2IQqSMmVbV7nNQ6MhK6VZTPnJRwjTxhhCRaP7QpPSg6Ev7
+ybk2QXz/FchKZ1jOsqFxIWAwHr9TRIqSunBlVk/7A7fICC6xg9PSg+CV9Ln
r2wTJRxUUsa5hP1KQhISGsXL+So9xHRHqS4ktQgklHKNQpIWAwZsZpXq/PBC
RcKoBi+1uYqto7BnlVRyubcncHoGh9kXbZPyYg6yXEdAqUSAEX2jd3ROPWk6
P7JQidAtSUYwtopynpnIab6Qy9mzpIAHVEhosYAnixSiEheGRxK62XyCFUES
fMeY4QCp/uikCGFSi5iAJDatsWWU84zC4ALDhK2cKNdl8xzPXlJiNZ6NQyRx
f7fxv1z5cE4qEKo/iDhIoXxeSwow5R+TFCH8yosQdCHP2SIKe3ohJamuyoVN
yrtc2J2VX4pdEfxoDm7cIkREal/yC2UouHv2QvkALuUfl1QfuF9h62DzKOdp
BTlVHeRyroGHlSi/lwAq1vZExoLyuTDTBCiarIUtgynpCYMw5Z+Q1BzwE989
gO5Jzjj+Wzm1EJuYZHA5O5cE+jnlbBxKSx/k8AaOCwvphKkRwuF+aJTvrnzK
TSn/xKTmIN0WNhA2jcKekgiLz5GVXNhtkm5TUH6LQhFfxYYj46TPzQ4WQJPU
USWLQWDT9sklxUWyabBJFOzkRLDlYyrMBQvppizCK9/xCp/fwDlLmLFTTyI2
JSaVTYm2Ty0pKpJ9g42jnCeVFG2t3TfqQmdepCl0+oQHyvUpIhljExMPsknY
o2NNewFPQDXU4hB6028cVGwUIrv+Fb8++OAQk5pc6+VGspHQNUp9Yknp1tps
b6PC3qUoU8UHzqgb06o9DUqEbS84KIIgliBSUH9ry7OzFJRmShOzFEnfERf9
YNasbJqKkPdkr/xt1syZlYOS4gSCQPJIdhs2ios5oaSu88Wsx9Z1ndNRe1pd
1ShEI+fRyvgpP6UvDjmm5iRqkuCpitglhsForXFKtU32gRLHLIa6pYdJY8dm
L44enT17//3ZqKuuysbIyh6WNY3V0sfddVf2lvjCZMVEdKX3VQ6w9bEhSEZG
ImK6cfEucX3Hl9SGvr6uIvrUg76+NZo0yddHD4Ceuq3P7YtJTDopZGCSBgSH
lxTsK66vXTZVldeUSZOyFxV27lR4uemEE7Ir9tsvO1mec77y1kDl/DNVkQ1T
WrhIPP32QYOyJ7XeV0VKp0+Zks0WafGag9oIQ8Q0qENtnZ3jOo8tdGsZvm/j
hqfksj3uRUaXW28oo/R1QoES/u7rhO54PeS9DuyRl9OwMXuM61wgmya1vyz9
jb/33uxWFaCnyzsHa22nCKKTlA+GKs8eo484T6H2CMl/mtA+VeifIhO54oAD
spEiXW/okjPffbeS1lgwV98zMabdKa73mGS9KEDC5e3I7qIg24hZ1vUBGmVr
K8nSEdxSNt1t4419yBnW2M8iX7HNWjBtcgEjvZixt1NIM/ybiuWaa66pM+1F
UF32ipY05u67s5ul9kHygFMkwPmKgufprTfo0x+WkA/I0B6TW94nrnSPlni5
oLmImW55zdl6z3mKCE/cfHM28YkngruQzfZNyjskLezYbBghOrqQ80Vfc4jW
lBJWj2rPIdp07bWz9QTTOvoS33eItlZk76HyMoWI9rGfK0m8A5XdLFnZqoNa
4XDkHzgTWYDsm3vHotk7orfjRK1uHzYsG6yEfIgI02WykLsUAB8SHC8o+M1Q
unpLgfN9FbzviglN4UsKG6/Y86CQv0yQDhJkpylnXqnI9tgNN2Tvi2LMfv99
R8lLy8KW0QYRpThN2CxnHNtHNhHyZGfhCjXuvvnmvpeEsWyohLvx6qvntXoP
BYNVZQnr66W9e/RwkCD0xAhSlcJJE8s5sF9iMpxJ7tWAwFWJZRItTeP0EaPF
s/fFrl595pns0Ztuyi4RrIcvs0w2WNcfpbVPVJJ7VWXrh4ooH+y5Z/aBIsiH
eg3/5vtsficPmib4X5Ejj5VfXCm1DJT2BqlCu+vcc7O3pbL3Z87c14oyyluf
V8PpKMoMqCMToKxbEICiUKaNRWdj/cUW85KCCUhju3mjspMU1UmYri+wNlhu
OWfrJEabWAwquPvuuyteUXKMgKTCLCT1F6wek6KPRSBSKSdqw2vnC3p/XZHz
jtNPz86Qko8V6bhN39+Rk08Tr3pPQRpcPtxjD04z7b67MsGHwuZDfs8XuIGh
bG26ZHlfv7tL6f8S2eTRWt2Io47KXtHnvzd9uuMFbfMxOpgseK0f8ToiwQsq
0t92oPpotZ5VN23dOq+8kw0qHzii6l5VC+4leOmsr6cUt8vOO7uBwbuSQNXU
IKMae/rppwMnJLTDUeAU9IzY5ZcBVpxITFJUGSHzOUyvuUxCPi/rf0+QzAIO
6V+QcK5lt934P+bEl17/lMznJrncQSIVV2rdE+XZMxS8HZd0iI+ACS7rRVzi
dGjjtEcSvjZff/2ckPZN+jdtDIy+0mCgV2CnL6axFMkdDGJgAkazIEizUL7h
UhArj9gkNFo+MvY2FiMeU9QazIidXOteyT1VRi0MGgRbaRitA0sREM0cDrcY
wfFqz57ZfQrmRwqOEYJ53MiR2YwpUyregfUOgo8P2h5hx4jIYQkiVBqOSIfF
Fqui6LtgOQkivXr0yHZkXsD77oqFnZde2hGhj7ld3EIktTc3ROilE3vwW6/V
6NdA2ySnWwa08h453XEK/xcoZz2m5b0jAWazbJxE7tPKATGnmay/Pypqc6KS
7FWy5ydvuSWb/s47jgKGyWlCCi6uaiOBHSIKhyYotKzb7Sam5OVzNyVKtwsv
FDZLRlK9hb5O06YeXCCpm9jbigdWSelPyAPi9KFCj35H7qLenyL1tTIsUN8U
0a/7L7kkO0+pcKgu8bCsZLKMKniJjKRNioV+N1VB50lFhjMU0K6U6T6lmve9
adMcC++B+BiOTSGuG7E4xLBITo5ELIKIEYu17MxOHRYNs3U41xNjS24528nq
neJ4v5506KOuDkoLsw8WSyOBXSVslUIQfkNppcLIz3jNFHajZTJnS9+ny+zR
+wxLQLKNtgU4ZgiCp5V/zpR9j5DXvPDII+Q2hyPtslCzMd4lONaJcAxI4PBt
Br5WiwPcYZkbJsM7DsdaxIRCrctGQdV0vv5PL8I/Mz+Y3Cw/3QMl8CEAkiK7
PzNnzoxINA1M70HV4sfJ34ZKneOVPwkKWjbnwSIMFixmShFPCYbjFcmvEWN7
RaldBZvDkDZx8BAbrVw7wnBQgeNzbtH3MzsWCs9t5TVtDYYNSwaysJIu4gJ1
MDTO80lqFY4F9kpxg3t4zU9CoZWaR42meHv2yLXXZmfK4y4Ti31dgXF2TKsq
E6qxICWPUlQZICyuUmqdrEJJhaxjkTaKQN9aHGtFLA4skFv5UI7F6nT+Eiz6
asWOxXqJSbjprF+n/txDyrBIz1ayp0a/g6qa64MFSU9/cyxg6xS0Q2VtRIxx
CrIzSSLCYsEUC5kUkfVuYbG/3IMicIZwVFHsWBCo/LRVspe8ZsTigAIWHK51
LNYpDlOvtFKORcek8edYrJuMZja0CJu6HFjQ4hUerWydhHSa/rgHioLOMeQq
oSseLSjwKWov1noHCFro6/tECmxj990jHE1jtNCv31BgvVH04mhRklEjRoR6
3+k8rS8/AZbsU68Rsdi/0ECU7DkWHdBz9WZrjkVXJsEKWGxVd/8Aw6JZPnPl
WNC75j++C4T5EhPhdMwwlTa8jOYEmx3sx+f9p6Yh1r4hq7lc+hwodxmlmmpG
dI/KwgGTJnlyfUaJ5xK9ZrDi8viHH/YtU8gxlXpha3z1CMd+hS2+OtOQ2Rcn
c3Ms6mymrnHNiws+wqKc1RoW+pv+0/8NDysM42rRHP1BiCGlIcSZ8+UcnnZE
MJTpkydnDyrVnia2dLUs4F0FTRFPTnvWIaIAe5+4/RniEjeL77/98suOCN07
Lu+78dbwWi0ism8Bkbog2jDbXAVGKSKdS6IGG1G2l5Mjgn86IlgfiDQuQaR5
wk7JMJgGnAfKhsmg1CSq0t6jB3BKp07ZUDHUl2QCmAQcLAcFT9LvrhRgA/W6
CYyZT5/uoHgX0GcArHu0agRlnwIozPrlJwvYXykDZaNkhNZBIa3srJifgsJu
kN9IA1DY8G9aAkozWy0lH/ULHQ2sGlA5byMCXWnjOVfpaPLEidnFMoWByujP
i+XNirGkDhHLM68znCnULlLsnTZ5sveXvG9YmDVYJSKydwER5u4dkf5lLfSk
fPNW+/pJfPWhye0UO6vLvMahnnWAiK0A1LwegMgGbF8CLGUPbI7cwxanFzQz
p0zJ7r/ooux0hYTrFDXomyjRLJq40FT96j6R50Fyo3sVUMVj0l6jz1X75qOw
WTlis1cBGyEYle2L7F8CRsfEhfx1W+pjq8GIh+4oTSzRtCzBoWmCA3d3wMnx
HvoDbIoozuSGQjwZf9992WnC9WKVMa/KGGZXGUrTaChynee6d8+O0+dcpgz0
Onf5+OCDqm6kn73kTgLWRFopIrJnAZFVV101QcQdJszwFiDoYjuPKQRkNezB
YmrrEgj83j4kEG4Zo6ivty8WSiX2PyyAVIXVD5kHO/XU7DD54L2KEDMJo+Ii
qU3QIhkpmzhchfljYvei6N5np9nohz2TCY0VqxFgY8OKzty+0z0Evvr362c1
rPhG3ZmqHJP14gx8FSY00qjhDZO2NTFpGkg0vXiIEvtOiMOdCdhvcbNg02Gc
Us+gzTfPzhHZflFBbo6IKiw+kClMEJ8frCVcIPW/9eKLB1qLg7ainzVFWloc
BsYeyaYDSS5dSI+6rXaAyTNMsrnpOKyfzNv42yFZ7BFadpm/BIfGtkbuyMD5
Uz4CIdkH43WcK/ebZLz54ovZVUcckZ2txPOQFEpMkB0smiSV6fL/Ecqyg+VB
r4jtyyQcgvR0q0+PrxAh2L3gEekaNkqPRK60kkOwFSfBChCskoxw+dvJBzQs
LJcsWA8EfliMHVUYPdT0EVWeMA43BWj6MzKF42X2F2udU1S4f1hMJXINTGGM
zOU4aeD6E05gr+2gpAvINgDk0O70UVk+4rBbAYe6g46Nsg2S4b++yy/vOOwo
RIs4dEyoqL8d2yZdWMpYuCYOTcKaWTuQoSxOSSlE5BAY6bp3yJDsOCWjW9dZ
J9bxKenCG+QBzynTniEifbFi/BsTJhycNPzIEsl8TGW5CMGuBQhUTudr6ANX
MNPv0b69Q0Cvz3o6dRDUdcbyTIxZs60sCCqLlazf77DFAtmAoL3A+jEflSht
EzYxYdSo7CKtcZDyz+iNN84+3HffEB19/XQ+Z8gVrlFCPVWW+uRtt9HP6WOB
mABru8nmXI1Dx8/vXGKzOJVlU0yahXCZNkGhEaH5yQZLq1btbJ07J8cRnWqt
mpwIcTyYP3Im3ijg0Sz7559/Mv/v77//zn799dfsr7/+Cj//9ttvDQy25GUi
7HNC2dCwgrKScWgE+PQEO6Ic0nE8Z4jo3yu3u0wB+6Z1181eVgR2l8rLGppC
cqtbRfKPUsC/R+pRVO6dqCTscCuI0Xqj3fQe+zrvvWdJra6fyG4U+wJ2PmCZ
CHH/JAgDc4rTOtII/H29hRbKf9dT2X9HGTc/lc1FRdxbxCrS1WX7H1QzaTUo
MCOubbKffvop++abbwLsP/zwQ4jKGMqnn34aCAzt2E8++ST74osvwvc///wT
tWQ///xzvXqAorHlCGlkF5oo4Gf4XA90Y+5TOXGd6oWn9LpphDbrVy6UkJ/p
Wsaozp2zU2SJN8bQFshPTyvfCJGA/5oq+KdFuB668srsptNOyx4Qa3zy9tuz
CQ8+mE1+6SXXi/c2yVWYiB2EWDrqpV8SDny4Ly/AFHi6imFttu66+e824O5V
cUI210u3kvOauMyG8TYMOfMgU+ITli3Ri/72yy+/aPl//PFHMGbmEOE2MuCw
rc1M8nXXXRd6DAyBQCUY+wds2CZdMAI+70GRP/74I8oKn11W1rjCGDQlMrIX
RE8XhsfYB9sxrjBmOO4SRbtFtT5s9F3JHxQmx1mwUNY8t8022WBhcOb222cv
jhkTddU6iPSe/O+Fxx7LRg4dml2ml54lDsIG1iky0QGC7jTFt+tE4UbfcEP2
ppb/4ezZLZNGLAecfIzMbiq0VNRd30R3K8bj0IZ1s2wXOft67dtnu8SZwfDz
horPG6u+2n7LLV11m9WYMO0UibB93AKB7CGAZfns999/Dw7PANJHH30UGo+Q
fUbhmHlnVIDClqEkwjv0lNbh+mFbib3v+cLUFxMNcJXTTz89qJj+P4uGNXIN
QqR8sLRsd1XSAKYpTDFAl4Gb3vF+GHcbK9UYzaGIuOHAA7MhSlFj5X/TFSos
Di5QKNsncJ8OYX6GGMZzo0b1tAGZ9/Spk2Vot510UjZUXnyqUDpfEXeouO3N
iqxX6OfTRchPUnKkXTJCNfMYRQEGKVylSEaTwSfu7ODMklGluxSah8LIKvem
fgAtfG0vbDmLxBAFp35yfQrn4pYDY6+byZXr9LlCGB0FK0Ix+sRtiH3gz3YU
G3LsoKI/hm/oZSEPsQ2mQ+OCRMp3gj1ujX1QosK7/CAf76MgZmqKTWMmdrAb
bOa7777z8FzWp2qQpDhCKR/Fx8MwiASot62pd5pc7Fn5yVnsQ8vq8cb3IM9R
ve0K/d339YUFnKmVDMNhH3+cFLej8YWpCtTjHnooO0OGO0SLGCKewobKeH36
O/rU12S0b2hRk2QCt0vNZ+jvgxSwb5Lxvzp+vGualjmCF8YV21drGg248/pe
4SZoyzbP1m/RwpXLbG2feLIiV+7O+tm6GKbc+QPLoYtBEuI/Eh4VM3sZxM/0
7kYuHJkBg2DKCkdSudaADVJJw0fBK6hY2rVrF7fmWoYsyyupQImifCIujapp
OBPBUTUuLIYTVTxfUDEW9aEN+vESeoR0TeFeCMGU37BhwyrtTL1vTZoUhs/O
6tIlu1CvmShikKi3bWErY7po27PS1eXC4Vzp8PEbb2T/t4fvH+qKU1SK3Hru
udmusoArZViPbrRRNkV+xW67AoCgpMXZNJQZ7+kj31bov0mmcLKKhOGKbcqx
uUf7doBPf1rPd4mo5z4J8bHj67meO7BBaCVH72WXbWUd/k51zRmn4tkuffrE
OLBqiBxcx9X72WefhdqPdEgpQazGokhr+CE+inpxIPZfmRojFR9++OHh9TQi
GcGmicVWOBspmAglCv7PliMbo0QrtIO5EAOI3TgrJR3l97fffhviSEzraLtl
iC2ptuFb/A6OSkcAzNgPvvjii7EE92c24u6Wes5ju1sKf0H+PMPD9R57tEkV
LtY6Uwp/QSu7WBo6pkOH7GExolnvvdcjabe8y+3dmNgRlvdrUfiuiopKnClo
UT15Qn3JlZSYXlTQPUuCXqLS6NERI1znvu1RmKRdPOp85yQx2yREPgy/aqNG
VZvjO+2wQ37+rAN1JYdQ7G8cRRKhjYpfPXwUinVeSxCFszDkxekXFOu3FXAj
oXuFskmwcCbmCkiYGAwBH8WhFAgwHApXhIPBOgheTAXQc+SzMQSMiR6ttzDo
lWMweDyg0C4Wl6tpALyGOISBoXyYDVEDB0oMgBHNkVrmEBnAUC3pWUXrqU6/
9tijddortFmrMaJVg2Ur5IBn7r234ifCoVSD9PYhApY5tXdj77VJ+hEonCkB
mdjlWuSQDTfMRl19de7h9O84aFiYQF4sart3SXPFtZ105cNXx+WWy7W9kaL8
dgyCMkutr07Sdv/+/WMUXzRUMmiS0T3XOFweqgUj9psQ+3FDLo02aLDh0kwI
QDZAnByKa1Jpfv/99zDkBsFPFwzVjf/35ZdfhgqJl8MEMBRSLZGAaIPxkd0p
3P0GwIMGDQqMARIuxlZL7+x4sNuELeI02Cl2he3KZnK9jx4d+h5DpEzc7gnx
lLepk+gG7rnnfCgtDos1y7cnpylu3y4sjxXWVygSvEbi8WzeJHteH3nejjtm
VwkfvHlWHKRqlhJ4fRJt6DuUzM8Sg3r0pptc9fgDQbIwr71oVP1OhblXUd1c
9VtxQ4ZE9R3atjXVN856K5psIHEZI9tWHtBp2WWN5i0UponTKonKCJpN05Rq
COOjx+5DwEhFTcfZPrwIz0bXqqvCd+XfWLpGjbcJdS85g/BB+UT89oOBUALU
Q6xnPIrjinBBrIEauJZ6qX8pyxhT8a1gzq+jXllTHtfHjs0eU3A+R5c6Qet+
oGvXoJPZtHf23DNoNiqmRVSvDbnR/hmrHDBMVnOGjPBaUdPnufHDtGmu5pef
fjq7VC+9UFd+mf5xnHxpXmcxjcLH3C2acpL8+4k77nAdY5t+B6BkZn2Rah1D
1Gw0JZ/RKOp4SzGjVt5PVPTtLL9cWz68dZcuUb3twgUInl5JOfPG18iCTs5g
1aAIomRLqiu0xc2qGuBpEskbR+ikVVQxxVKrwLnwe5ySKppyDI4GuyOmEMlx
XjbyiNyKCVWqZU84VS3dOnblWD9CUbJVqbZ52DinC3emQuwJdC5kPY9Kvbjb
rDjqWckH+DzZStFRN/Pl3jxL39+XR8O4blYuP1aOd7aiwdWqkOlsKK/bzUka
Z9OFG2xskMRipJZrtAyf2jh8/mxZ4B2K16fLUp97+OE8ntOI9rspJcP7C0eF
90riuQ1b5ArvnjC2XeMB9lzhO8hA15Ek3H+n9447NjQ2TulL78Uawzkb5zwu
pJcoSOyArpFREYisy7QNA8BfffVV7r0Lmo6gWv/9739Dn5cYQcznOrgvwZk8
wNAWuleZVZ9qqcrYOEG1mAWmwo0dlDraWhODknfCI4+EcZHTJOkFSlY3i1sz
7fymUsMsm262EVVXZQOfV9UnEsMnS0OPySKGyAhPVlI7Txq+VbF+0rhxlqwb
h77WpXo9EzpsdTC11co1yo6YLnUzJdm222avT5iQazTdIk2OJywUNdoz0ajf
Lck12nvOM//5xFoPXSXc/iG/VVW7QKpIXs6+6RSm7Jtc6fdzYQuUap0cCulh
TEn51ZrjLUN3kf9I07gTJI1qmdyKnDB2/B/iptycqpEFuhr5WEIHaoRPoUZA
gOspc0Q1LppNVSp7Q3SRnuIwRcjT6V5I0nvkIaPlYew2vWMcizpoNoxI+XS6
fv+maopxQgKPvkq6O0FM6Dz9fOERR2SP0nufMcNVSJ/4xlNOyYbJQhg4w+Vb
JyqcLiu6SCZwrVjj1LfeylWIT5BuIBhwG7s3/oJRhTuW7Nz4mYhudZNEsS72
7czkth1WHLcLPk8Ic0pFlzcl0YRFL4LJcGQxwh+EeMqUKSHALml9+f/7v/8L
ykD3EAO/Qy82ggtyhFDEupbe4BYUEaict1JkzaG3hcMg/TS9lAr4JmWCEzt2
zAaq5jhJK7lOFnLnuusGnvS4iMArspbHpctx+plMd4UkGa5IfLIi8rmS6JoD
Dsjukse/9MwzvbxvL8bOia4T9FI+xhJnqjIma4/W1R6RHb4/c6apLJ5P4F4H
sAVCGXfUMn31KDSyxFhyfcF4ik1H+pOuqramKnqyWAPNB1eXj9PDgOnfQlr8
Bn+4JE0WMOVcMb3cZUxVREwaMnQlGIHHhflsuy95cFGps5aq/Ebn1NaoircT
YDmOqvo/qmqh0O4Fz5effDJ7QtXTxUrm1B5HL798NlDuNlCGNUhf7Gyeo4+5
QO53qtA4RfnhXBnbsXLFG5WTR3N6yZLdTr69K/53qDz7QanxA9scj4Vwo+wD
+dQEJd5D9TlKxK3sLZQKnDXAnu3eUpUFqvWT3oXf7861STJ95/rZKTnX7fqB
y9PSKGOq3F/Ab3UDUyUDsjmNZ8NSue2VCGhlOdMPNIgwiH54DU0nQijuRDyj
OfEhjxap00/6dCc/gUvy5FLoB1LMpeS1sZE0f9APrvTa+PHZw/rTSGl9iOqs
ocqfh9G9lw6YchwoFztWUYZDCFfKZW5SPHt+1KgQPqe8/npvw/ddZZ3hUsVV
esssm8J3lcA/ZgqwO2RFZ3Xv3treQtaHicHgCQ+oZP6okh2SEOe3BMhvkJgM
AeY3KpGQRZVgn/R6nF2yFVJkl2y/w2vIUmQXqC+HiCETIhWVFUwlVIK0BoiO
9NRxEzaUXZ2QFJVu3tjD+1J1UKugDlSBASbqYPg4NNQ5VclsFPPn7Prfec45
2T2iBOzo361/3yDR2NZ6Rqg9J/zZh5wVt+zsvmSNsvuE4vFaLl1ZEY62jr/0
8brQOFdud9/FFzv+nD4hXtDcZtHg3y7iv33J+WfHf8WGDefAP70DrePPfImH
IvCnxw03KSN7fMeF6L1B1JhQ1esrKxn+6M63xNhXoc+Eq4I/aZ7f1cCfliQ3
zaOHQFax5YTfyRwM/1ahFQqmEOmpIsXvSARsfJoYxevykWn6/bv6N1vIH8ZT
2ZU+hvur+vsZytEPKR6JMrRz3JXAOEF5JidUJk1y3JnSwp8JmPaIMYEWcN+u
kNp79eqV475+ya0w1k1GDxx3sIH4Oiujk0Fry1kZvUrCCPjByjBGOjr33ntv
KP9+/fXXyiqGO4UzbSyyG4zM72uc4q5QVYY7GQaMyVzgzsv5N9FQl7HHszQO
uPP6YMtRB5Vd7W/kj+Gq8Yfp/WEASEElgtswDIRdrhpBfpHvu2MizGNxPTiU
odumGlyCpdHRfC833D6+AO6ayR3NHFz8BfD+jTJBraA96JrYZrM9oQOxmoHL
xjtRGHAxfGRycAlaBCNFjzJwiUUEEMSDYTm43JMFcI91cDnepXh3tALPi3HW
oZJa57Oq0wZq6RPHjPGhed7CcVjCIoQPTO0hXsI5ANm95MYyDmTYmStaaXIC
po0BySQmtT/qmltCA68ks40ZMybMzK1pQNK3Q2ysnOSYAkkjg45OPUDih4hH
nuVSBCKAVC2RA0mmvFSAXamlzYy98RzImSI/g+RwN8sZZMEOJOmfChJXB9AP
6x7NpnATgOyWuLudda+eV12t7rBHjhyBjLwGMiBH5wO6ACo4nD+rBibKLhIm
CQIsk61+sfDK2oYc+8rIRbwlBvitTVPkFCRT5Dhpzlvov8LOCeP+KC1yHC00
Rj2O8TkvKeZpved4mSml7wepCYpfU0qdojT82oQJ/gxEbIAmIy3Esof7zRfR
2zZBzx5zkY92Fyc7O84/f6WdAUhZSgxwYoAfUs7UIgbUkkxJ4eN0kb766qvK
ugmANA8dQD9a6gDSVXrjjTfKAMTa/WkdVGEACGehd5gCOEu6vUr1/LkKK6E5
KNNrm3R2OER9bMuW2SN2HKWVJSUcl3hPH+CGG24oA7JFBHKbQtap22lvzBGl
KiDXaNkyBxLL4tN957xWhvdbqRKh6JGz588dpKj/OxqQEGYHkvf6DbgcSDZW
agDJF/yFepFwwtaEA8mt4o8xQMbqsmeKgj5Clt57bzdCanvub3CmKPk0P0bY
KLBv3IcryTrK4GteDR8wrFQ1LDJnV3SdBRfM4cPG0s1LT9TAU0zUbLWwPm4C
lpbf6xt8tE8+/vjjsG9FiQ58RBRCrMOnv9WCj+0tPh5ey8u5NK7ARO7RiSNf
fdxx4VYZU1Sm19lho9Dqeka55GCFz1efecYxJLoCGJWLLtGwBMNmEcOtS+6G
kj+opHBSbKPlljMM411vUwzZu4O8F/Mx4YT6i8YYdkFAlnSdCvBBGoCPvd4U
PmLqxIkTU/hsNiN8cXiKsUPg88cy0Uysg69RmKC6QJnlTpna7N12Sz2Ywd4L
9NbbRALwYIcPP6IXSUISjS2Dr2mEb6uao2uNw+haCl+XlVbK4UPYdBuVxaQZ
mIWyfvgFs0vsk5NjrGTtYvCRgmBCODVmw9scPpgQPfIEPq5GYEzhI1OyvZfC
x1Nmj0qYzAvKcNfJMjnUDpNpk2BIKrlGseY8WeZ7M2bkGOIobNgS7FWMlz0Y
t0nEcMsEQ8rSFMM+3C/CUgq3Ht1iww2rWjMs1jcn2XColY8xVXY92MUg9kMd
P//880rXBEg6aQBJIoUBFYGUedcCks1HOBslAIGTkpYpF2GfA8ldmJ5VKfCI
suBEKOHee9f1JNkoEJAjRaCGMOEzaZKNjTUK95VGOVxTqcWBTJ8Q3TgCuUWh
30Ua9xttbM22voDsrcjaq0ePtH2C23v7xFMytDlNydSK6IY2ITU3C/ZacRPD
EPwJA2QiCu8ihnyWeFAtDCk/wZDExcgI6iIhpRi+L2p3q9zjGpVDk7jPiTBs
lWDIJg9TN2craj91xx05hkRuahNKYy3PHTp9znSTagyBt/ppPw2zjoxCiHFt
vsACeS4h33kPj1TMzja9cE/FGKk/WG6dOAAX+nxc2ou+zQxABq4BkK0hAOSW
UimAEJZ6ACR9UfYUAVTtngM4WTTqaP39Bun0dRliurfBAMMLCttHKpfcJ91/
mJ8WireoYZMXvqTPK4uIBuDmBiD3NbYj0zmA2yuScay2Q7t2OYB+yzjvVrDV
VJaMWRHdUKyITAFppMVAYbdlQKR52FEGfLyfBFQEj4c+1YceSQq+RMTg/SR9
eX0lv52mUHhOnrGn5L21U6fszTg9nW/3waq1xAP09ruHDeNcTA4gpJBMha0o
MtQD4GYlLaD8nCF3flRW3bxDhzyVkPt8b4//AIFMzN6dZ2J/Zhgq9O60FXPb
GHaKhgE79nn8FmCOHTXjE088URM7jJlo68/ApckKKVeUzbFjbvVJva6frOtO
kfU34p0yWhRO8LK5c7Z8jI7aVCeFjfO6m5wIX+JgY4OSSGgYblog1unDaPrq
wtbpz3FNb/o1n+EKXtRXaYrGQIspGh2xAeFdZfirvLib4creHI5O1gFXf7i4
P4u8PlzpDDmudGO5TDWuTbOZ06dnjyutcJ+AW/S6l3zuYI89mCyqGlFi5/Iu
+dBQve56LWHa22/n5/GpitgfJNUQeCC0rlvFSKOLm5RsqZQ9UMOB5QTXFpzp
7N/f7noYrQlvJp943sY9inkbSyJvp/1hLwO3S9BlCwt0KReL6Ipu1kSXoQMG
WdidcHQJzQqxhm6zgO4YUdrjJOulKjHGdesWOuo2gt8ovUuB7TpznvQaDtbJ
yG86+eR8kp82IBUSIZS5qLQtUUDXbnJrM1oxgWOea8ncVm0WBusdTL/Puidw
WjLFBI75+M4+Nbg3e70U3MHAZDcfMClK/Jk3KMqfpaSQWxNMMiy1jtfvDN7T
EuIQ0JG288HG+jhd93wp6iR5Dbd8eFnKhfnYcFXdPZRwcn0B9hiliIsEPvdI
vPeyy1JA/dF+3lYqALpxEgf8XpYOKDeJ3YhHWYnod2jf3gEFIGdEPhtDXGRq
PE3o/ihk7+JiTexyUBzuaIBSWPI7QjHWmAKKVRcBtUfB5oCySUgBCnmgCqgG
tB1Hn7KXn3gCM8sOZYqYM5sC6S2FM06mvS8g6VxMF4ivSYFk9+ECcphC4qmK
0c+OGpWf+8QgoEekCuQl44d7RAUguyZA+gCSA7m1rshxNI5PdWrbtoXFT8Z8
sfc0sRNU0sQOJwMQ3+T2jq3C/U4FDJGviCEjJ9JLTQzhCEUMeY0qLWNEbbI3
FFG4ochxiouniSBfIWxulKM8IPflnO8YpcyRimDXCNtjZBMXymyIne+++WZ+
YJStJvImxg9XIb1SiVTqANyoZIPBny/VidsN2yEY7qrRr08fe25x2xCcALxW
difVojKaWD4bCHfktJUKxZ0NRcBn/5jeA/EXhpOiqMhfE0UUgqvDvggjiIIC
udHeUbaJ43MdnAHjFqYnKnGeqqWcqXLjcGns1KWWygazoakC53a99+m77soD
I9mRuM8y2D+h4HE/NvS6FNIOh3ccPYJi+pzXjVRmO3p0INJdAxpdxRzuN9YF
SW/XWnm4S4IeQRX08PcUPXKlIlFN9Gh4cClMnLiOktjRqUOvJaetGEMJt3W8
UxnoMrH4S3Sds6WZs+WzI5Sl7tDvXxG1eHvSJAeO/QtCD6ZNp4e4jqJKgEvb
Oz4cugZzZWl/YsEFc+D4uHSHgPyMSXl+pt1KfoYgeZvWh8VUE/Yz4L7++uvg
HBAZgKM2duBwxn8DjqMAUAHMji4SwEGY/C4yEHL2qmbI/F5+6qnQ756g3PqS
giJ3j+U2Kaq701PNdm+EwBLQI/0O/NRasp0TP/XyJR+kLvTDui28sN0cOzYj
eL1vDtBWZeXFPIwJ+KYrLVkSF/UedeCuhhrTebyXlAPZhcykqAnomqgxc1JE
jbEL/T72YxuEuq5RaEdwK1Hg01c7g4i9Mj6DoIC2iNDQwgSiTglE/nBCh2jz
uhuLxdnEFVfMIUqPXnpmxffTzAonJLOyk8TSufUNmdArvd0NIkZp+B0Rng5W
ChEeJgpTEyLmiJklYPwBn+A79gtEQwwGMj7b9DR0/HlZ1Na4lsGwYUnzvrEl
xi0Kj3gmLvXYZpum5l2QKz7V+/covCw14oW+mUnzFMWIp+9lIND2Z7MLEHgJ
2RaTBgQWVR8IODP5A/uAr2EvgDB69OjKeQYCI4XEF8QAXK5hRwWLILAS7935
iFUyp5rvSG6mdOY1QgSreRDBG/78B6eH5ycpTu9fZJFF9A5e471QCq1PPvmk
sk8CB+bLhDKisqUIHIgPHAr69cLB8rEd7A84uLY+q3KO1QIePYDAAxm5Cnah
xGSIbJBEXLtRY45ID8r5AiIrJLdXa2z24VvpjkittEXZT3lPV9OnZ5Sr9rN+
Er0o92eCNsnVASGAcxZCdLVBDUzoNaeY8Bb8BkwGJ3utabhAIrJkJdw0MQCy
fuInPuXlgGyTPL3DAemcPIHTAaHOTgcm/Tx5mo4o4Wip+1FPWpRsK6jCOcAA
4dQBvIy3QpRSQOBuAJLfACECAn10QDA4PhmaTKxn0xZARolGn22AEMtpq3vg
ADwPHAbIegkgdsvNOkCSm9/kz8NOZk0aJTU0knvvm/41uqiVboit1LYkYq9S
DjJUfOwNVFguOkxRgU4KxFqosLVNS5gQiX5BBYNUjVsZVCOSELI9khgqHQvh
lOa1o9K1ZPKsX0QuQaVtKIbTYUCml8oyDMrDa72XaEMihySA0HBiQ4aV+sFD
pAdU6H0BkHSiHUCgYvS/fQsRYgkgZ9YTS6juLJYUMEGLUNl0GmzDucTEnzHh
WZco6SM65Br2fMjiZFAicdoelJSHJZhAAlmcz0Y6JqiLt+RT/vPNMeUPoXZM
eBv5nY9Rbq8MNCMhn6exBO+k6iOWtIyAdEiCqx+LqG88btc5HtDePBB2r6gQ
s750A9siJNLXY+VsGR1hiPghNe7pAuNKEaEnC7FUMK6FCLEaAkijhECBYYHI
/fffXzmjnmBiT+R0RNZN3IYrp4iUDa6lj+5yE2G4DPPydMOOIndR4QiGP0YW
hZCk2VSgGcc+r5H9owwQvI3ADCC8hCyWAoIHFgBJx5vRAS7gTzgEEK4OIKfX
iCNQRI8jBsg6CSA0vHhekAPC8wyKN82xp9wkwLUNlWja+q0v3XhDDe5mRP4Y
A8SH+FgZgBCsCQhIz1sBRNZXCxDghV9QmAIIOxOEI8XwyqlJ17YYR5DG4ohh
snY9Xdv03lKOyU48brqAiR+xT7MNJRq7pagB6eA7fOe93hOjbhZzPy7BBKHR
JOTCH7DnRxZ4Wz4DXz8mMCB7FlF4QMApSRxh/DuNIzg3caRVNSB2r8K6hTY2
BHrHO1Ymvez4WEe0nu6VkkuL2YXlILM3tEBJFnSiIcDbQMBHOx0BRAUBgkI9
CLDrymlIeJ8fuaXxKtZVOdkQYAc2jRuwX3totiOwVhJJvc6tQoAzR0UEGDNL
B7jSXILYxVzizSiYpILKyYaAjw36/GU63Ar54KM+9Dn7ORHgiuBNKGKTxs++
g8BJSaAgmHigoPnggcIQWLPkQJY7RdkjBdm8LAIC12SxnktoVnLptDvHZxNQ
fI+I/pIR9VMNEJ8GZN+zOJDKW23KvRYgqJtpA7aXAIQ4AyB0V06wQEEcgr/W
CBSGyRoFEtazZ88ck24l1HSHEiPxx8+mk0Fl2cS3drx1hGErp55umKRzaWgy
nZBMJs/nBhM0gGMSulXUV45P2rZpoEBq9j4IFDZxu3ohcooP54B0IHAUAOke
7+1YBQgcn8Wm07acivFswsogM4hINvG2EMxVljGwBJDiyKhPLYvGp4Ckp1Po
aEBJ8FFeztU4gAAgx9WIG/QsIXbEjQIgfLQfEPGHk3Shj508PQuu0bN790gz
2gRH8Z6iz+oUM4iPSeCv9H5obXBrxkEGAvNigEC3hBhQHPusGt1uUTVxzM6W
n1C0BzOGykx14rG2fqcgRA3WT5VlTyP09a9W0h/09YdbF6bPneAOpT16eAbl
05DVW4SEQfIHm4GeP/zuBiDvXR9j4oMTCIoTh/UMXW/QZeMcAj9B5mdtsUyu
gs6Z6z6qnmBBqrJgYVCsWnNQIT68In0QCfd/ys8jt83vkJdOzWB8xUTiMwtp
y0cc/NywtkXz8bfi9GA6BAzCv/35d/b01K+y3a9/M1tqjQ2qjgj54Uc/tErW
tnuyH5nECQzV4wR9NjaciRN2xGGVmpO8jbLOSdt4u8UXTwsz9OZNQDYZyB20
Hf3p2JhKujfhW+BKvEMMAzzJJ9cw7+IEpQ1CZ5M/+SE78q4p2WF3TsnW79x1
jlNrfqoQDPy5QMLgiCQ08Ks0NHA5QoNhsHIhVorz5xhwHr2vhYTOrVo5BhQ/
aeVBrqBUTHOFj+9htP7gQxarcmNYgoFPnhFN0jHIZIY5+/S737LZX/0SLlU8
quRHxfwQLBgghkq8w+ciPBQwmPOERqNwK0keINBThr12HQbcKSs9zI1AZemB
YoYWurdxjFhfYGHBh8fKpu98krYwiFw8MZQeXCQg2xH8yqFJWKAnkoYFsjcf
LQwMgpVqna3Q/1elHcLDH1deueJpwW/V4emxmBZ8kN23BLxhw8naS6z1y66o
T80Vxw5thNhav02qRrDp8tgZtQYsWy/iRC3OzcIPMcUDdTEAsN9LALADZCsm
q14mPhkhXzWkoKPCC7dZ8lUjnZ8p9pkNTwRomUTgO+PgjYtSgtLwvsxW7SNb
rKA4K2iTv5WywXMfpvITYn4yEmaqsq4ywJaNl/ld7/hcLBH0k3NzK9TTteMR
gXbf96oayrtRLJ22UjHwI47fydibLwQFBcjhtnIfqkIJxUE/e+5K6cop5P3U
kZ9J9DOhPJzkYFs5xx1TT0cj7umFlRO+fResWVInUQt7evOZxjS0++gY4ntD
BWr3ww8/XJms0oebiiN5Nkxbuko/4MIxED+kxop9lQeaP4NG0Z8RxfzZFrp8
EtL85nG+UGKyq4qF4odp/KYIJH7TTPHRYRolRm1H2EJ98KhsisuGXiu1jgCQ
Ev0olJ/GwyE44ntADf/lc3kN/msHb5dLDNmeNWarjLdg4KPri9B+mNZbH2xa
QlyvtSVSGfpsVXGJOEl9o6ks0Q8rUaP4aU5O0e5fw1eJljRTkyUumywRHk5n
zJeImaSDEjQ2KY3SIIzfetecvgYfzyHo65Ml+rSTj4/N7aSjn4Px81i83pe4
X8Ep8Rw+l2u4U9oSlymEI9lfvkTaRd7AopYqRlwfMoZP0wQnl9gsZ+VGW6KP
0RSHkeZmiX5WBej9zJ4fG93HPBLYix5Jb9k8srBKQs8Cdh/kJkmRQZxIt0DI
ETCGYoClu40r4XZwm2+++ebmkoXykcVRwPrmKtl480M5fiQMO+JY596mSz67
6JGAgbnarQiWTuKOV5pNkvohHSVgA70swMJmaBPBUhDLeOOttkrGU3yup7jK
svm84ir97AyXSle5l62SugRwU6dkdzpZ5VKJxc4fdz7zVVIh8Lb6oiu69jY0
+vUNPjHD222VPk7iQzjp9BKrLE7QlR3K8BNCTCb4Ock9bZV+Ayj3S8Kb+6Wt
cslklVQQ9JWamF9ihZ5D+I/yHh8gW2H3bEFi6YCYtgXEYiojbYk+DuITM+mc
UdmQYNmxCeTyQ1BUNpxg3L3gl7zOPxvPMb+0VbYvFEAKlvkq+fS0CVRfgAVw
L/y5P8ndtsp03qM49AL/Kw7xFUf0/XAIK0hXuVtYZcNgN+aUImx6lX5HeWwD
9pXCMlmib+g3tmUSjvxcG9U5dlcMspAq7w6TQtlY454f987lMotDY8WJeT/F
wXuwbz8QuGsNr6T9zLXwSrszzRLJIZbqm6fGdrK3cIrRFZYGUyBLE4O8ZqfT
LWJXud+W6JMZPqpCmJzbuTg/FOAHVYhvdDo5tNd/LlzSlrh4yURvo4Slp3da
RyPF8IqobAiCsJfllGCidQ/aKn3cwudPfCDHh7Tqm2Pz4XyagX4cx0+D9TWv
9D361CvZDLJGvy10sQIn6NatW16FkYPxOu/BwLjBrhhh4Q1ee/uDDEfZKtPx
ieJQyb9NYcES/QgC10lXuYutMvHKsEo+G/plzThb5aKF2LPaaqvlq8TXU/6a
RlisIo2wXmFzRVqCjyarBO//ZZU4l58NIJPTzeJoFQfT+tRwSjRFNE9u5xWW
2IDf+MIg3unRJwqaNKiStcjpbAx4Ec1eFJRudGFhPuyRTr/QXa5vaszny/3Q
g5/PofzcuYYrEiJ8IMgWtkjNjkmbUFp6d8TvqMll04BKgPQuqe8uKelXxlhr
yCcVfHYjnWfxsad65sB8/huDK65yp8QVQbaGK9pCF04WumR8lFXFH6PpUwK+
s0qJmITV+CizxsF2mC6iyMBmuCHsk7bOdAChOJFRY7yrOHDsc+4UujQncXhO
W/VKnJGgnTojwdec0da5UCHkrLnmmlUdEGzSCTqxlVa+x1a/A663PCmZSd5G
6sbaWtPZguJaiZlUL/WslZDsU+mUrn66hEq7p1kuUhVdEo3gknZTywULUUcS
2ELbBKqYcnTKQyyTUs9jK9GA2AoomJTzumdslRhCOkGRjpT41FFhEqs46Qs4
vkriBK9hlTvW8E9CMKyEJlfVKhcIlQhX52QLEhMe0t1ftiKKcZXLog8vmp3T
jU9WmM5DpDMiPkWUzFXVmmVmXpUQ7ivklNAOZrMkp6JvEsLNN22RC9gisVmM
Cf/EKkgc6QEUHIxFEGNpSrjAYOxlszO652yR6YZ/OvJQzyLTCUNyjg9sgyex
jtE1jvFsX8MxWSQ5xhzTFjl/skgYuQ8LYoc+8EOUdfrpUZaICbX15hNu4Zzu
hSB166pN/OIifdrH7qOb/fLHX9meh53IKv0RI2jIB7LZGvPjDixyu8QjCfDu
kWDv07Z24+B2hdADD2gQnt7aOh8WRR2EV+b6+ZmUBDfz++B7tWx0bqIt0Deg
fUohHdvw0R0I1Luf/ZgdMXJKttgW++EivkB6KXxycYEchOluryFyp85ItMeg
cEZbYFsrRTzkECMhI1Aoj6nQa7DihCCYYscuJd0LL5RF4ybZ4nxj2ccN0hGM
dHFjp36VXTPho2zEyEeLi4MFY5rkSEyVn2kIbVvihz6XAi02P6xaX7sQbMgF
0Hv29DyM0rMgHHoYxfN9e4g+KOUxGRvy9mrJ4oqjAz5wwx4i+6T8Z8MUvjif
8GXu2Yfj/cDENrY4epv4nw+rFYbjbXFtbHHJHXTTZ9wGy4ThUJP7wWfvrFIK
EnTovELgXrfgku6H42PFQREkr2eaiIaKjy+Tlwnq2AyL29oAALfU70hDPplq
d2iPe+KN0wcw+ANr7a7mccwHSbmcDztgW/Bz1MaUjHjbm/bydHe7OOuANfzL
wkhsuGlxYZzw2Koef/NBMVtYqxoLq3u0d/NAMCHr9MDgLj6XBpsiV3DIeLKt
yverfc8+HV9gVSVzPWkuwPQxVx+u9hl8DiVsYbZIZY2VpI6WnF2pWlijzJ4E
6Ivy0RE/wEVuwquByB9+TOBkzVrL2/Zytl+L2/DFwZTCdE7Z8CucE4qB20Bz
WdbmtixCdpmL2TOdbFktbVkePywmNkqWRS0AhgRwGBoqoPnqDyXUsqaYZtNd
9eJ0Bc0Ndknrm9X0gV7vfrImjktsVo9n+aymPd9iPluQG6AFwibhqs3CrgA8
hJRCY5uQQmxHAoWGqbYQ3yEuGw+wiZmaC0FIgE4X4gP9m5hyoDceStybUKaN
T9laWiRrYR3Wd/C1UAvAzP1xvlgC+9EQINnbdFsL+75lu93JyEvNteB2jI+6
EfnYOWvZuB7/IfpaB8nW0jzh/kY99V6u2jRUYmQNv9UDjSJiD9tFM20VZNOy
3etkYKNSa5gNkyQk+o3wMB+SIccJuibuQiJM3QVztJ5tYRVOnqMi4v+psYiQ
cEo6dNTaxBq2DOQn6UJ8M7q4De8LKRtI8xFFMrxHTBt438jcA6qVugcc1ScU
7ck/zZJtEmsu26Pi44NeYR0o2Hk89ZCNjrxnL/bt17LddBsbKV0A2isuwAbU
O5e4BRD6WUobHSqswWuMdA1kQUpACIefeWN3CUMWXXjfXuz7q2V75dWzEHNO
BRLifXaWqgClaQ2dEnfAA2u4Q2ENuLYbUgtzBxyW5gMclYBLniTZcwprVmEB
vkFc3OyvtQB20kATEkFbGpLPAvT3DevxBJiBecJi5f4sn8uVQCdXYTukJQTi
OxUCjEZG5mugvPEd4OImd/VYRvUafA7PRzN9gFm1zQaJJwChewIVmc/gLZ4m
impPaGoLgHXgb2ytEGBwJAII/EoLmJ0swLc9i1vY1YMI5QuguPDhWtDVAtb7
F0+gYVC3hpaJFfkamiSegKuiOkzVh1dIBUrrH9gafFMz3aNOJw2Ka/CpEfbP
aJCyBgIFNSsmriKqo62BsrjoCfRZzRMWT4lV2RqaBkOCERIy8AQqM26V9u23
31Y+tAX4fmVxV3bOUYnqBeCnpEQUR7SjbWoTzh3q8QRqUPOExVMuX74AQhG5
n1yAYIRTeB+H030B7EamG661pwRalE6j+Riij+fK09atxw18Em2JtMaqDkSN
TXr8FSPE8PwYHnsdBKKPTHpIiO+lFreLq7f+W1QN49AYovPF3rwPkuJukn5t
g59GV9EH4NbYVN0C2iaBqLgAyieoKmGaaAf3BRMe9+fHrv6Rr2f27PK/5TO/
wdTtKVV/if7a3xrwwgNt0XQMvOlT3EBmhytddPKA2KpFk5l8cvSWW25ZyxYN
lkWnAVdzmiWq+zZp9PVFw378Vpq0OrARUooCQiUevmud/aDA8L047k+KYF9w
N33xllnirbOVJqcq1UwXTf5aAn8qu/zmo4+yP8TQfv3hh3T9+I/vuRbXXzcJ
0aRqzxWNQlD69evnA5Q+PEwDYg3DAKbAR6d+l0yOLpG2IKsDeEMLflguGYfA
7byVnTjLQPHo7qJR9/b1s9b0rmB44fbbsxf11rEKbnfIdXk+320qBa9WJXeh
1na9BL5VdnQH51HpDsufXlJg/1iZ7FvVPz9a0042tK/B5Tubvn+bblH/27wB
WcvnD33S1oatK6sbXkU3x7Rwc+umLFHdfU/jVAOzGW/5EBBh39gNgZHYE8Fa
PPtL2P0mb+frY0XGcYoEV4k6DJd014gHni+MT1YgvUK0hScXDlLSuVBSX73m
mtlZcr7zVaxdIAkHKttdpIhypZxglOqkiSNHZjNkbz8pE8n5HDTfKKXCKW56
w5vrA82n/HxclaqIwAVoqxpohGZYVRpd6MPZGFz7OfdmykCDv1Ag0ZghBcLI
yTgHh9cslf2j1/wh9X+nfD5JlnW3LGqIstglqo4vl3ouk4S3CJgnVFS/JnN/
VQXaK/p6V5Y2pVu37JWtt85eUmH4/KabZiMF6m0Cc5hWdDZPSdLvub/UGBHS
t594IvtISoHDy6r3LoBIRPE99bmdAcHKfCaUCO2jzjzOb5VCtCIIlESr9nNu
5FV7atNQOfLJqAl1sc1Ee5QcE2/EsEwMwXLRzxWNxsktr1bGG8ZNCQXgyLXX
zu5fbbVsggCaufPO2e9y1R8lzY/KJX8cemgmdht+97v+/bv+/aNM6Wv9/f/k
1oD8ZKdO2d0ikNzo7DT5zQiRytskw8v33BNSgSKfg+lPl/FN7XRAoWwMowgm
lNDnTn2Amo7IygYmzKyesNd+zu1fz3cOJtyI35HrcGEeqkpfRaWpgblsNn3i
xOyRCy7ILtBVLucpggJxrEr+VwXgDFUF36n8kejZP1rhP4pzAJgBpBi2RInf
/efDD8/+0vc/9fOveu0ncun3lfQflHIu1vUv69gxO1FW+7AK6S+UL79XfFRc
rOyVIOrDUpSCPibgIx/1IcqApM+A+siyj6SvZIiy9mJgJB1aYGw/5zBEEVFo
DZ0srkDYhv5B+dlIjpGqZfYr2fD557N7zz03PJZpuEyK57KOFV16Vz78pXT9
t5DSEkGuETAqWR90UAP+xWMwDeZ/9AWcvwrmyfqgJ6SW6+Xwx8rQ7tDvXhdD
nKUlyS5zCH0X23fr04EEwllxaqZs9JI2mk8KQ0+AcIV/CZM2mLhk9dRMykcc
QiSDwCMZWw8YJeSJ3bC9DcI/lVvgG69qhbcpdlzOg98k1WPKJe/qvd/Lmw0+
0Gpt6A0YQNEMcgq7n8qjZ4j3PCjlDpakNwrBB+U+rz34YPbTN984YLRpfNu/
ON5QNppSnG8k1PlQrk+PM+CzvAEGlS+GxOToz5LVI2MpefG8Av0h8HrRgGfw
qVQ9e5lkfyuvANgT8uThstnB8piHZW/T5X2EuRwsGdj8oAVQ/Kzf/yTJvlcs
msQzShXYr+3aNbtZIXK8zOHbzz93oNLd9OLMQNmoS3FKEgB8qJc6xsfsl6sn
3NH3tr77ktXjg2UJGDoJOKiDdxNgAe/LL7+s7OncS0z3ZVnVlVLVWeJP98qi
ZvTqFUJWCG2HHKIkbwDhh/K/vyXBX/K3d2RBtyq8jOjcObtaFjhGtOK/H33k
ALH9hAg+blAcIKlvFgiAfFIWgCjimGAHoGWT6AUh8+hFdKSasei15JzDskWA
KC1xXHb7iKmUBX5jEr832h/yh//KH8Zdd112pf5+vaxokhgIUesPgaAcoJyT
R6tmMfBrKdPFD29XcL9CvjpCUWS0Isfns2btZXUPVJsuho8qpMMYczFG5BOo
lG4+MM3i6VYvXYhNbJ16bGKwwMYzl5pzZrrIPpixAF7ezQ4zw6c0eajPdzOA
PlOsenDQoGyIhD5fkrysVP8d8YiQHpMij0eVBTWLLqag8r6s7W597pV6zw3c
51vgCuQUG9/z8DGO4jhOPdj42KrPIPswOWcDlkrCEOMeaRjCC4FdQWep6qn5
MjIBYabiJzPQq+XIEVfnQc79DZvflX0+lB/fLlrLEyHv1Jo/VyImkwXvEjZL
pNiwCmFzrz5vhBZ6j1ZBzP/GvapF1dxAcTCCf//LqBJVHoTJJ5eZK/JB+yUN
G1p7JPY08hDhLPIsVX1uwmlBmtO4CvtgsFa+6OaRVCBa/e01n4ob33fqqdkl
soF7panZYqd/EWHkUO0DJs1zQvWPvj7W3++Ro14qDB/Rwt8XAMpbFQcm3Zan
qVcci/mX6SaGR30Q2Ee6GRsHmPYGDL5ajDh8rEWcpapPBgEM+auY7ClpKSKB
FSkoQFSIVPq60SjizBBfukWLPk3gPSCAPlUJgHGEECyjyQHSz7DQ3+Rw00QE
rlUUOVdGOU6x8nuaGjLGMoDYuvGJk3Ru6F8A8hliHwanVc7hhcUNIGdaxYhj
s6dLz3kGrhiSyXp+AI2mPRTEk3u8gWyzUOt8Sl9ZGfV8qeIx0fRP5VV/Em0G
DFjS05UZz5/6/pU+cqKM9FIeDKu8TkfiT+Un1YMODw1hGmI+1pHOrPjEUT2z
Yz6W6yPWDg9HAharJ+gQnCzoLD3nKdCylE5t5Smd9hA1Nndx72PwwH0+nz49
e0R196mC8Qa9drZCm9nPUh5vgEcf9Zu+T5ew98scLhWSN+jnqRMm7GOw0Osn
5DMQUpx2ofQt3IeqbNwVDuIz2TBdDA1YFq0n3qB3izcGy4rzmMghsCTyPvYa
+ifjlIMvlhncqqphql7zi64Aw1k6xUR562fonvLd0IUXzq5WxfuiiO3XH32U
YuJTF8UhGWg8ONWDCaOxPujsc+rs/LEzuEiNUEOWSebUDZOV5iF3owmElslX
epup/MJJn7Fjs8u1xiGiui9tvXX2Vx01zmEhyuhX3/HEA33kiYsumt2rMuVr
8RfxI4clndoIJ5uTERsfjEru0FUcTKSz5JPRjBD6+D5HMRYyWHzwOg0woE/K
1/eYk/L7BsxN2qbI4+r0vHdyD1Io+EC6veeEE7LL5M8PyKw+UY0SqoYBA4qw
fK0y++XNN8+uUBa7UAUtFdU/f/+9n8Vzpj58kCWdz6FmtlmxSn2Y0PJh6IDi
EBdhuAlMFjRMqLfLoorN3Romq8xFuqaN5eka8shtlHsZJvSC4cJPK1adrIhy
s1zoY7Hy31S3yYWWcUyoNiXwG8LhUlocwmX8tdcGCp1gwgAJbl8c7kkmsaow
Se/153PIPllOo47hVPZ0F0havtgEw8UlIcUwWXUeMzXdLTJ1L3sNeHyi6Hun
QsZRcuTRkuiXiEdlmSSkEGK/UL0A5T1DEfkh0ZOfVXgp5+xvgPgUSjpRkw5x
pYAUb37oE71kWh+1p+nKBvH8BgiGhOH4M7VwHmKOjTsZIKvPZWam7AZO+ps8
tMoB+VLpabwc7FrlkxFKDq9JEusy1sVYq49wqPtkRENF7q+R6U7Vqv789dcD
DBAfaCEIpoD4+Fd8Zk05IMyF+hw3A4+cscCqmOOOt3tvGFosTLSqiNLnSMP6
HXHBJ4Aji6u6h9e8JGN3m9ly/Bu14uES71EFqtk77RRr6xhhl0yILq2tn/bf
PxsrqQerFL9RHzdLaeD3H3/EdSopMn6X/+LAkg3G1RxYonXM6BCdHBpRJAZS
05gxY+zZNc3zZ9BSb+M/IAijYZ7Ax4cNnTXnISdTaZCTJX6lZxJopzz1VHaZ
PhpqRu34tRzlr9hpWLJgMl8q0D4hIM9fYYXsYhGJV0Uafv7mm4MMGLbzy0aH
5hyva1UKDKWmT8VDjmmZkjUBBHNrEQdE+WezEDNh0f40ocIZHQNorblM0Fg4
lyJXkKB72JLgcj9K36/KKocLnGuWWy40/H5X6f9PSS3wu+zoM4k9mmJ85ZWz
WxSN3nvhhRCpsCGHyudjikNKPvRWN8A3J1Sef7EdoKIPh3LxJmgLN2poGmyp
ZXARHwxCNWBAme39YhgkVMF6+Iba2v+SvyGT5G+w9/zNhoij9sevv2YfyfHG
KuANV167epllQlPrn7o+vUqWpEqgFNeqPxJy9+szhykkXauK6m3FkV+++44N
loMLwLHTUwZc3bRg69LhaIBjM4Q4TWuV5Mc0JMmKhKhkHp9m1irHjkjlDz9g
FojKlJEYZjTpjEB2/aEC8cYb+W1by/rNxWRP18iTvQNICfqupL9/4MDsUnnE
5QpHkxXTAwEq9nSsO08PmqwP2OfI5+9WAP7wrbcOtY/0YSDaJNRGPkiD9ROB
aM5E4JacAzimUgEJK8PXeA/iw3iwKPZ1OKlIfqZ8g21hbRBtfk+fhG4iG8Qo
CpZEbsfh4fAJcuk9kREjjWhOCfgY3J3jbFySgeweXhrIYScrlowUsbtY2W+Y
ONBrshOqin9idwP0Fkl8llbqD4r1rypk3SjLHi6O9xhPDOS2Lr/8UnEEGUUC
QXZ20Dn6ZyWYEXGf3mgUtX3p9DBbFwzvMe2E75FNeQ3mSHgkmvEaOBlxno0I
Woy8xgfsuR632CKHYItEPHmpgddxLuhDOuoDffj+++/zJzy9rfRwl4jLFTKj
8yTlC/J9It2flGnWjF4w9Vv8mTajvmYohYyUZKdDOmUnLyoaffPJJ4cn5off
OngELkIIKR9R6wLeEnOAh+jM69FVAgiWABkHRP5NHUfegG4AJrmDrIeNkDgB
HI7ANgfmTxzwJ8sYcuvNA81Ah9gBNMORm658/YjyCc+VPVOvYWvsM8XZb5Qx
iWz6ANvnaJk7LBn1JyE7Xe95RHZ3kTxquOj6aGngS9H1v+N0z+GJ+YEgKyAE
gSDkGApCKmNXrIG9tjhhTPgiuhE12dpV1NNrhYuiJEHATZnP5EwMv8M8iU+U
g2RiihI8kKVXvIlU9TyE+hgIn074YDMCBuLAfaJPe/6mm7J7FNUGKRndxkP/
Nt00m6UCyrZ5K2EnrVVAr1XdHq8Q/FtfX++5ZzZdGflpIX6LULyCPTKhPvGO
O7IvVK0qF1WOtIsxiwdBJGfBpvw5sOxu4HkwiximF6kaiKStRuVLPMM7sQb2
fzFe4iAxjaBEFYWVABlG7jfIZYiALiOWVKnDboOa5KRJTk78nB5hVORkR+OV
34mn/J/i03hxxPOUwoZr5XeptGAOI4wWyK6syV0JGyONAnwyQcoj3BkY+eLf
bpAKJr/I3b/o1y+bqTg7QVnqDi3xfH34mfIrtuXp+v71xx9HG6KomAiOuKRS
EAUVECInfvzxx7akhimi9rTLJiEucrQHw6TbSzkkN21gd7fH1Qh1RA0yNPSG
oAUj9IdqGZgbzgNngSnRiWXkLCaONtmfSrm//fBDNlnF3LUC6SoljcHca1sZ
nokXWnQ/SzpaVv8Q83zuICI8YIAqG589+CfuS4XX/KHf/Z8AZet3ihLSkwpS
NylAnSO6PUIRgpbYZ9On01Q91n3ik08CUNQzNIbxZMAFZFIrIbs2qC1DToRR
gBb+xrYw7VG+sy+OGaM0XEFmXfZMeguLneaSx5AC4TEY+G+//Wb1xVLZZzJ6
5qceUKI/R9XXkBVXDC3yewTAm0oy0+SE/5UD/yA9/yKg+I5T/6Wvn2SJP8mU
f5cyvlDi+lhgvSYrfFDmhaNTr5yvz7xHr31TBORXMcO/RDwzvz178zADSCHu
pykhizb4HBISPafaQMZKzEdZWRpxgFDKvzHD+Fq9quzhrQZhl7kkNJRoKaHp
aUziZ/HfryTHO4oh94kO3iKIzlRguEhflyhgXqX3ju7UKXtM8e95xaSJslWi
wHMymFfEaJ6i9ah49LhUNV5x7jZd70S991qlgafl0O9Jhq+1rl/lySJPJxh0
2A4jAcxOIxoaJpazbDr1FEll0LWujcRG88hO4N2YekRisVCssmfwveoxBkHf
ECV4UJzpRiFyqYzpAq2Q7s4lMpBzVaGerNA5XIZ2mX4+ZqGFApF+XCllnJjs
2AsvzF5QUHlfy/xRsZTJn990Lb+tPXvn1IJ0I6jBoRFM8pB4iR70AARBoxIE
Wpa4k8Worv8Dy1Dat75ou0Bu+e8HmTrznLMUjGmNP6cE+riCwz0qbu4Ra3xE
qIzkoTX6/qQyxBvc/kSv/W8owPUpkuHv33/3OeLKSaZ0Cni6e4hOZYO/UMiT
w1A8JUrjkiXPV3vJG/8LP6C35vyAu34RrzhsHx/12Cq0PZns/J2xZxEiJoK/
/vjjUBbS0/xC7vKr/v2zUvvXipu//vhjJd5jPDZmIdVwST/wSDMXFvXzzz83
KVlJC1sJrTyCXrKSTeYyW8PHLFvHHcVG+fw2//39998N/L11v66cYSrAt8CF
bAf0mALFOqeVyYKEhqYlgjcv8TsTfNN5zIxswpEZ/UQY4hCp6KxAOPEFFsnx
CgsHVSLZNLn1IKqtIu6t5U8Fr5VXaCZ6XqHN5nllutEfdjpwURqNTGfSxqAo
ZSm0M3g9s6VEKRctGXTnCd21RNuinihVjNfkFuI103bTDC1EYzQJZGg2kMDh
haCLsbNz0KJEpMYllmcibVmPD6WBk9KcQtQD51QLZojESAcxnVIcdGH3hBpK
cLYWRY3LpGpUYlYm1VZzGcwwFw9m3Mfn3QQoP5ZMqUvA8TPkVGfcT6lliUie
a+1R3kGKuDdZ2Xoegw1dVoLNFAOKfUU/tcrgIbUB4lNxo0uYqj6npXl9enSC
L7OmuClY2WYe4gVB97PPPnsnCQKYL+ZNj4U5B5SLebO3+XZ40jmvbVwlhNmO
bUtWtk0k6LrxpjUdn/oZNN3x/XA7o4hwRBydZqM3DdlDhktSEsnUWxeURIUT
dwAr3ebCz1kcexru58zvvGVAcJADxsv9Ufz+NERy0jAjatw5oW0SetyXDYDt
5tGXWRC+7PcsgAF4rUjDAbuhyQAR4lAaNiXAWpkE0DukoEEft/sq2/8Prsvg
6WsW6HyGj94jp83RMNJSoJMS6BORzhjsaWnZJhED4OMmW2WHeXBXIj3rw11f
MSyYXmEemt9D9SnmyQb+KHZmL55++ukaQsSNLRVbtYXgFAoOShwAaA4hoXsc
dFIS9xGAtjkCIKyfnyHG0BIDDqJf83JJ4pZJZcd5986XTAgf4/L722C8TNtC
lWlDsWduj8Sxw9dzCBEb7GK2c5eZUwdl9O/58JqWYbOfgo4FYMvAQMrEQmjj
sO/GpiMwyk6blgsTH7pW6TUPvgr+FEf4arz3U5vQmafRQf7FrKkNmdvBX91I
0BG3BqP4JsBhVOToRuWSxX5mpfdcujH6Yrk+6TbOJKPtw/4SeoUt0LpBGqCl
88VsBFyLXAicZCpWw+pqSBbbXmKp/5t7P2WSEd9YAb01qn1cmh1iTImAw3dc
np4dDXj0QERmGquGZLEPUunzP7r7GJPM7xaAq6M1rsC4BjnAb3kPr8ZLWRkl
gt01rJZk8WHUlV3+hxjAxPRjJhlMhsRNvqBC5fQn3upJElekAUdTzyVD+5zg
qyFZrEwrfWu6Y11MwJqxFY6EfP7556NMKDI2LRWeaUsPy9vQkFjqWUwTL0Yo
4jjdRpylHqFi5VTpV8/pjzRGoAzMw86AV+JtS1sHM+S8GXs8BDNiBAZPbUc6
RSqmVdiBAFKCnRyohlCxlqj0/x9jxX0mFJtDVDNUY6DJIryBit75mdO50Aks
EEImol1DqM2jULv9S5hgdqcsTNxtQsHYCU7oh9fSx/R6x++sCxOAnDImQhtt
+vTpNYSKpL2y+1xECBgvlkv8oWXFiMudZli0jWmkYsk0IrBsQrw/8B1qynYe
G0E0UE2okCYalksWWXJlj3mIEMyd+hTobSYZ8KFrpGYnFgNkJeRjjIs4BlOE
GOA9UBgg/jO0H+okC+NFUbJIWCt7zmOEYEyFZHuzSUaaZFqW/SLa8Fij36oZ
nHkvErMqJKM3SvzDQmtg1j1Ktte/RAi0UYgQN5hQ5Go2sWhIYEWEdTpKnqup
NbA6duJJoSyAUF+PUJFcVvauZ7LMI4SH6zRCXGOSMfrEXQyoLIhPMFwUT3Sg
ICOJwyQItviNJyG6QTUkizyvsk89811pmOBqSOpzgFcliZso6c8Tg1KAk1MK
8COmIRkTaDRNCC00SWpIFilXZb95iBUoFmNnvcOTxO2UAheG91Hp83oCIuZG
DiB1gquPF5D8vWmYGH5lpyjW/ol9HXfy6f8aLXx0/VITC4JO1oZPONPB2smJ
3KDCH8NOUUmzGVJJ2iqKxRLYW4n8pnJAItYppw+sGSoI3x4qGEu7KEnZNPYI
5U5znIChR5BGVP7G5elCMUfAZ5SJFSlE5cB5iBPsYHqcOD9J2imTABlnX34D
Lgg+xzipQEkOiAVPKhMrpurKQXMZJAhBdtppqKWglELAa5xxwQVxFByADQyk
odZh+0wrKhNm1yjMwXNBHzw4cLrIJ5TPSTI19IEo7qQGSQhZzk6xSvpK7Exb
/7ZMopgKKwPmIiiw5jQokDMGmUQ+ggGhYdISQgPN8ofZshJ2+tE+klOK1ZAo
JprKoXMZDPj0NBgMLCEOzmagWBA/Z6PkKbpcSMT8gZReJlGM5ZXD5oE10Iwg
DhD0TjOJkNBZg1MZVkBeTqkof2frlVV++umnLpGPDyDRvlGiw+uRiGqOEOCP
e+TO3R4CTjaJYIDOFuAxSAC54vUkGjCDhoIhjB2JlKhSiby1EoNk5Yi59H57
4kE+GXqCSeQsAcvFFZ1ZpXQPDgoxhq4T7nOJ5sgrMURWjpwL32e57vtffPHF
sSYPaRj25gTBWYvfmJu38ns4MRGLxCjfqCFPDEKVo2pygybBuXAezJqcj/vL
CPweLFTATgvQDJ4OnyeaOr+DeUKHCewUDkoGNeSJXl85eh6c3w/00ZI8zIRK
GYFzFWdRTu0gndBhODqFQ+1qJjp+5di58H/8GaB8NJ/diAEmFFmX1zHP7TTF
CZRTOxRODHWOXruaiZ5WOe5fQgAXIgRwAUKA7xsfaEJ5AY/AzlCcOzmrY2Hk
638XKtp15fh5jAI+YLafCUXGTYkA2dVpkxM6qKYzc2qG2iVWNCY59L8HAi6C
I5E8CQTsqu6TJF0cCq4GM3HC5DwOhumsnFKBRam8qkEwozFVTpyHQICalKH2
NHnQLiQgpSSYnhM40rBzcQIYpYsSZA15osoqJ9Ws2OsCAYvGoWwQercSCuCk
JGVuXAzsYOBeG4jx1ZAnAlM5pZ6xiDQQoAxa8D6u0zfJuc4CAITeDK933gad
hOU6+bZn9NUQ6uQo1KlzGQi4EH7l25I7m1CkYbYlaGtATZwsOX3D3DF7p94I
JSJRQ6gojXL63AcCPyTDJkavAhdwduJ8yRkc0QqG68SbMkWBpIZQp0ehTp+H
QOAHVQgEPZLk63TACYpTJmydZONEF6GsSKkh1MAo1BlzGQjI7ny470huZ0J5
iQ4jcI7irAnfgFk61/VaQBynhlBxJ6oycC4DAY0KI8/bJhmYsOx9DBiKcyYi
Jj870/VqoLY8Z0d5zpzLQOBHFhUItkqSrzMCmIh3fGAn3kp0nuu1gN5TQ55z
ojyD6vE5LIRFpoHANyk3M6G8EocRQFOcNqFkbyU61fUHTosG1hDqvCjU2fVY
UjEQ+NwbjZqNk+TrjMBpit/rzbmls134t9UoNYQaGoUaPJeBAHNNA0EXE4oq
PGUEOD4J1wkdlgjhdQpuZUqNXt35Uahz5jEQ+A5Ip/CaVqH+BkG6FVAUeJOT
OXu2Xs7A/dYgNWC6MEp07jxEAYKxR4H1TSKnA85PnDQRLzFCOK9zcH+iZg2J
Lo4SnVdPCMBCSKiFENDBhCFDOBdwboLrw+AQDK7rBBxezPZLDWEujcIMmYuK
wP2fMabPPvtsbRMGpHAhuhO8lRYOL4UIoGO4jBNvqoE4QJLlRa43uy6Pkgyb
S88HHp9Loq29uonjFMB5ifMkohp2jZPyN68D6vZaqmvuK6I458+Dz7PtThWA
z69i4pBnPfnDSJwmQdsISM5rnWzzxO8yca6K4lwwF94OG8RRSEikbQruFU0c
Cm5P+85FEB1l8T5nteQg4/6l4lwdxbmwHnFQDEADOoaJL0NM0f9yJg65FaUS
hp2FODUixzqp9eeh1xLn2ijORf/i5Ezr+PPSMFU+ljuJLG3iUGx7qkexZAkn
RYjlnNYfz8mZujJxro/iXFzTw5uFSxNaiWr+GAm8g9knJbLFTSKSqyd7HMkZ
EfqFpuGPEFpYNuByT68yiW6MEl1SM803C2YBb/D7qvnQAvH622+/XSTJrMQU
GhJOP1CVczTyB0ESOoBq7T7sDUuEujkKdVlNj28R7Jf4w9ohFIRcoht3JmRw
jf9U5cxvwlFze9p3LoJZO1eDQMJqodr+FNm8SKrrJyHcrVG4y2uaVMswGEte
ILrBwIjWKAelcAsBmBcOh04FQask43IDKKcBcBMytBM4hIaIcjmvB2oXKbdF
OYfXlLNdGDzknBCtHGINKmKCFFScvcLMmPhD28jLiNGfNlhMn9U/C+HhMfyd
uh3qgDsQeEDXSZbfQZ3PdrqOMuvZuLojruSKkpVEk146xBTgwB14J2gDmfNw
xvf4G7vLSEaA55giSQFt8DNX9adCYSM4OTYCC/PbfOEHzueRup5NrZFR6itL
fD1K3d59OrAaRseJaNwewx9/4bkA/kF44v3oiBUxxcIpDwyECpYw5PfZBm9w
p1zyZwXWrtHujoJeVdL6jzPPiwRDIU4CGQqDpjFQ5bdKR2CUC9wIjgExYItw
CIYToAI6TxgUt49hUANqV0Oqe6NUI0oCU5ySmj84NeZGJCHlEqFJl8zmEfdI
rbggCmUchtzF2VM/m4HRiPHWEOD+KMA1JUGohYGDzSMEd61kuI8xf0HVAGdp
YDvXvOYvG5xvUH6lB+OVri2x74XL3/FwfMd1Je9YoPwdj8R3XF/yjrbl73gs
vuOGEvttVf6Ox+M7biwxpBbl73givuOmEiXXmD57Kr7jlhKt1NDj0/EdMWw3
TVdefGUljlFXYuRslC/Z/jw+/vX2RNhZNuNsfwo/HPL/178r//l/KsCzWQ==
\
\>"]]
}, Open  ]],

Cell["\<\
Proviamo a lanciare un dado! Usando il seguente pulsante \[EGrave] possibile \
lanciare un dado una volta sola oppure un certo numero di volte \
stabilito.Cosa potete dedurre dei risultati?\
\>", "Text",
 CellChangeTimes->{{3.672555205223344*^9, 3.672555212810884*^9}, {
  3.6734980413917713`*^9, 3.673498042992036*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LanciaDadoProbabilita", "[", "]"}]], "Code",
 CellChangeTimes->{{3.672553650579014*^9, 3.672553650580736*^9}}],

Cell[BoxData[
 RowBox[{
  ButtonBox["\<\"Lancia dado\"\>",
   Appearance->Automatic,
   ButtonFunction:>(Private`output$1305 = DialogInput[
      DialogNotebook[{
        TextCell["Quante volte vuoi lanciare il dado?"], 
        InputField[
         Dynamic[Private`volte$1305], Number], 
        Button["Lancia", 
         DialogReturn[
          FondamentiDiProbabilita`LancioDado[Private`volte$1305]]], 
        Button["Lancia una sola volta", 
         DialogReturn[
          FondamentiDiProbabilita`LancioDado[1]]]}]]),
   Evaluator->Automatic,
   Method->"Queued"], " ", 
  DynamicBox[ToBoxes[Private`output$1305, StandardForm],
   ImageSizeCache->{25., {3., 10.}}]}]], "Output",
 CellChangeTimes->{
  3.672553780779682*^9, 3.672553837718185*^9, 3.67255430860737*^9, 
   3.672554359280775*^9, 3.672554451637825*^9, 3.672554568914485*^9, 
   3.6725548027581053`*^9, {3.672554874624187*^9, 3.67255487477591*^9}, 
   3.67255526192303*^9, 3.6725553091002502`*^9, 3.6725553486460323`*^9, {
   3.672555422856069*^9, 3.672555457827985*^9}, {3.672555507123263*^9, 
   3.672555507489943*^9}, {3.672555583262094*^9, 3.672555608491549*^9}, 
   3.672717234036586*^9, 3.672718456964711*^9, 3.672718542912815*^9, {
   3.67271944411768*^9, 3.6727194448296413`*^9}, 3.672719769469493*^9, 
   3.6734924836918573`*^9, 3.6734929049743023`*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["\<\
Proviamo a costruire a questo punto un grafico delle uscite del lancio del \
dado, mettendo una tacca su un istogramma con sei entrate ogni volta che il \
valore corrispondente si presenta come risultato.\
\>", "Text",
 CellChangeTimes->{{3.672554266533989*^9, 3.672554285289606*^9}, {
  3.672717337883458*^9, 3.67271743442218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotLanciaDadoProbabilita", "[", "]"}]], "Code",
 CellChangeTimes->{{3.672554288281472*^9, 3.6725542882833023`*^9}}],

Cell[BoxData[
 RowBox[{
  ButtonBox["\<\"Prove ripetute\"\>",
   Appearance->Automatic,
   ButtonFunction:>(Private`output$1307 = DialogInput[
      DialogNotebook[{
        TextCell["Quante volte vuoi lanciare il dado?"], 
        InputField[
         Dynamic[Private`volte$1307], Number], 
        Button["Lancia", 
         DialogReturn[
          FondamentiDiProbabilita`PlotLancioDado[Private`volte$1307]]]}]]),
   Evaluator->Automatic,
   Method->"Queued"], " ", 
  DynamicBox[ToBoxes[Private`output$1307, StandardForm],
   ImageSizeCache->{9., {0., 10.}}]}]], "Output",
 CellChangeTimes->{{3.672554874671568*^9, 3.672554890666999*^9}, 
   3.672555262017418*^9, 3.6725553091254807`*^9, 3.672555348678885*^9, 
   3.672555422953433*^9, 3.6725554579257317`*^9, 3.672555507219208*^9, {
   3.6725555832896976`*^9, 3.6725556085277843`*^9}, 3.6727172340904093`*^9, 
   3.672718457174428*^9, 3.6727185429877653`*^9, 3.672719444201363*^9, 
   3.672719769476735*^9, 3.67349248371975*^9, 3.67349290499789*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[TextData[{
 "Cosa accade se il numero di prove \[EGrave] molto grande, come 1000 o 5000? \
Il grafico sembra stabilizzarsi ad un certo livello. Questo fenomeno pu\
\[OGrave] essere spiegato mediante la",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["Legge Empirica del Caso",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ", detta anche Legge dei Grandi Numeri. Secondo questo teorema, se si prova \
a calcolare la media dei risultati, per \[OpenCurlyDoubleQuote]grandi numeri\
\[CloseCurlyDoubleQuote] vedremo che questa si stabilizzer\[AGrave] intorno \
ad un valore preciso.\n\[LineSeparator]Proviamo a ripetere quindi l\
\[CloseCurlyQuote]esperimento 5000 volte e calcoliamo la media:"
}], "Text",
 CellChangeTimes->{{3.6727174447125998`*^9, 3.672717562993556*^9}, {
  3.672717617877005*^9, 3.672717622122431*^9}, {3.672717851268827*^9, 
  3.6727179304842167`*^9}, {3.672718082531201*^9, 3.672718105600268*^9}, {
  3.672718441620368*^9, 3.672718442232189*^9}, {3.673497911012439*^9, 
  3.673497937433779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MediaLancioDado", "[", "5000", "]"}]], "Code",
 CellChangeTimes->{{3.6727184446588*^9, 3.672718448330759*^9}}],

Cell[BoxData["3.527`"], "Output",
 CellChangeTimes->{
  3.672718457345965*^9, 3.6727185430639763`*^9, {3.67271872996589*^9, 
   3.672718731797329*^9}, 3.672719444284658*^9, 3.672719769511142*^9, 
   3.673492483769753*^9, 3.673492905021842*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell["\<\
Come \[EGrave] possibile osservare per evidenza speriementale, quindi, \
lanciando un dado 5000 volte, la media dei risultati si attester\[AGrave] \
intorno al valore 3.5.\
\>", "Text",
 CellChangeTimes->{{3.6734979559195004`*^9, 3.6734980243507557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Il Gioco delle Tre Carte", "Section",
 CellChangeTimes->{{3.672507651245389*^9, 3.672507659947527*^9}, {
  3.672507780498917*^9, 3.672507780558095*^9}}],

Cell[TextData[{
 "Il Gioco delle Tre Carte, conosciuto anche come \
\[OpenCurlyDoubleQuote]Problema di Monty Hall\[CloseCurlyDoubleQuote] \
\[EGrave] un famoso problema della Teoria della Probabilit\[AGrave]. \
Supponiamo di trovarci a partecipare ad un quiz televisivo. Al giocatore \
vengono mostrate tre carte coperte; una corrisponde all\[CloseCurlyQuote]",
 StyleBox["asso di bastoni",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 ", una carta vincente, mentre le altre due nascondono un ",
 StyleBox["otto di coppe",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 ", una carta perdente. Il giocatore pu\[OGrave] scegliere una delle tre \
carte. Dopo aver operato la scelta, la carta del giocatore resta coperta. Il \
conduttore dello show, a quel punto, che conosce ci\[OGrave] che si trova \
dietro ad ogni carta, scopre una delle altre due, rivelando un otto di coppe \
e offre al giocatore la possibilit\[AGrave] di cambiare la propria scelta \
iniziale, passando all\[CloseCurlyQuote]unica carta restante. Cambiare carta \
migliora la chance del giocatore di vincere?\n\nProviamo a giocare."
}], "Text",
 CellChangeTimes->{{3.6725076669187*^9, 3.67250768261416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BottoneTreCarte", "[", "]"}]], "Code",
 CellChangeTimes->{{3.6727197853113956`*^9, 3.672719788859705*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Gioca\"\>",
  Appearance->Automatic,
  ButtonFunction:>FondamentiDiProbabilita`TreCarte[],
  Evaluator->Automatic,
  Method->"Queued"]], "Output",
 CellChangeTimes->{3.6734925558305407`*^9, 3.673492912024769*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Avete qualche idea?",
  FontWeight->"Bold",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 " Facciamo un grafico dei risultati. Provate a giocate tante volte e a \
scegliere sempre di cambiare carta."
}], "Text",
 CellChangeTimes->{{3.6725076669187*^9, 3.67250768261416*^9}, {
  3.673492874832703*^9, 3.673492883659745*^9}, {3.673494016639393*^9, 
  3.673494026949965*^9}, {3.673494060761053*^9, 3.673494105080248*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BottoneTreCarteMultiplo", "[", "]"}]], "Code",
 CellChangeTimes->{{3.6734928881265287`*^9, 3.673492890873919*^9}}],

Cell[BoxData[
 RowBox[{
  ButtonBox["\<\"Gioca\"\>",
   Appearance->Automatic,
   ButtonFunction:>(Private`output$1310 = 
    FondamentiDiProbabilita`RipetiTreCarte[]),
   Evaluator->Automatic,
   Method->"Queued"], " ", 
  DynamicBox[ToBoxes[Private`output$1310, StandardForm],
   ImageSizeCache->{283., {86., 90.}}]}]], "Output",
 CellChangeTimes->{3.6734929139559383`*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Notate qualcosa?",
  FontWeight->"Bold",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 " Sembra che il numero di vittorie raggiunga circa il 66% mentre le \
sconfitte si attestino intorno al 33%. ",
 StyleBox["Come \[EGrave] possibile??\n",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Consideriamo le varie opzioni che ci si possono presentare quando \
ci viene chiesto di cambiare:",
  FontColor->GrayLevel[0]]
}], "Text",
 PageWidth->Infinity,
 CellChangeTimes->{{3.6734941189849663`*^9, 3.673494151215143*^9}, {
   3.673494185531034*^9, 3.6734942027419357`*^9}, {3.673496938025008*^9, 
   3.673497000144977*^9}, {3.67349707859879*^9, 3.673497107036751*^9}, {
   3.673497146230575*^9, 3.673497153709093*^9}, {3.6734971957094173`*^9, 
   3.673497196587874*^9}, 3.67349727546697*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mantenere la scelta iniziale",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\[LineSeparator]In questo caso la probabilit\[AGrave] di vittoria\
\[EGrave] di circa 1/3 perch\[EAcute] all\[CloseCurlyQuote]inizio ci viene \
chiesto di scegliere una carta fra 3. Dal momento che il giocatore SA che una \
delle due carte del conduttore dello show \[EGrave] sicuramente perdente, il \
fatto di rivelare un otto di coppe non modifica in alcun modo questa \
probabilit\[AGrave].",
  FontColor->GrayLevel[0]]
}], "Item",
 CellChangeTimes->{{3.673497289313098*^9, 3.673497383653131*^9}}],

Cell[TextData[{
 StyleBox["Cambiare carta",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\[LineSeparator]Dal momento che il giocatore SA che una delle due \
carte del conduttore \[EGrave] sicuramente perdente, se decide di cambiare \
\[EGrave] come se scegliesse di prendere entrambe le carte del banco e non \
una sola. Il fatto di aver rivelato una carta perdente non aggiunge alcuna \
informazione in pi\[UGrave] e pertanto la probabilit\[AGrave] di vittoria \
sale a 2/3. E\[CloseCurlyQuote] come se fin dall\[CloseCurlyQuote]inizio il \
giocatore avesse potuto scegliere due carte invece che una sola: fra le due \
gi\[AGrave] sa che c\[CloseCurlyQuote]\[EGrave] una perdente, ma questo \
aumenta le sue chance di vittoria.",
  FontColor->GrayLevel[0]]
}], "Item",
 CellChangeTimes->{{3.673497289313098*^9, 3.673497298907494*^9}, {
  3.6734973932463503`*^9, 3.67349755590868*^9}}],

Cell[TextData[{
 StyleBox["Decidere a caso",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\[LineSeparator]Possiamo lasciar decidere al caso, lanciando una \
moneta per esempio, se cambiare carta oppure no. Dal momento che ignoriamo \
totalmente il fatto che il conduttore abbia rivelato una carta perdente, la \
probabilit\[AGrave] di vittoria si attester\[AGrave] intorno ad 1/2.",
  FontColor->GrayLevel[0]]
}], "Item",
 CellChangeTimes->{{3.673497289313098*^9, 3.673497298907494*^9}, {
  3.6734973932463503`*^9, 3.673497396132744*^9}, {3.67349755901997*^9, 
  3.673497652088913*^9}}]
}, Open  ]]
}, Open  ]],

Cell["4. La Distribuzione Bionimiale", "Section",
 CellChangeTimes->{{3.672507651245389*^9, 3.672507659947527*^9}, {
  3.672507780498917*^9, 3.672507780558095*^9}, {3.67349310519917*^9, 
  3.673493119534172*^9}}]
}, Open  ]]
},
WindowSize->{1321, 744},
WindowMargins->{{1366, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 471, 13, 136, "Title"],
Cell[CellGroupData[{
Cell[1076, 39, 343, 5, 67, "Section"],
Cell[1422, 46, 1934, 31, 171, "Text"],
Cell[3359, 79, 141, 2, 51, "Code"],
Cell[3503, 83, 3240, 52, 287, "Text"],
Cell[CellGroupData[{
Cell[6768, 139, 1636, 45, 51, "Code"],
Cell[8407, 186, 1431, 30, 65, "Output"]
}, Open  ]],
Cell[9853, 219, 111, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[9989, 224, 232, 4, 51, "Code"],
Cell[10224, 230, 1413, 31, 55, "Output"]
}, Open  ]],
Cell[11652, 264, 1273, 19, 51, "Text"],
Cell[12928, 285, 565, 17, 61, "Text"],
Cell[13496, 304, 958, 15, 51, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14491, 324, 108, 1, 67, "Section"],
Cell[14602, 327, 947, 17, 51, "Text"],
Cell[CellGroupData[{
Cell[15574, 348, 223, 4, 51, "Code"],
Cell[15800, 354, 80582, 1356, 422, 41822, 718, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[96397, 1713, 330, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[96752, 1723, 134, 2, 51, "Code"],
Cell[96889, 1727, 1369, 29, 55, "Output"]
}, Open  ]],
Cell[98273, 1759, 342, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[98640, 1769, 140, 2, 51, "Code"],
Cell[98783, 1773, 1042, 22, 55, "Output"]
}, Open  ]],
Cell[99840, 1798, 1031, 19, 110, "Text"],
Cell[CellGroupData[{
Cell[100896, 1821, 134, 2, 51, "Code"],
Cell[101033, 1825, 281, 5, 48, "Output"]
}, Open  ]],
Cell[101329, 1833, 265, 5, 31, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101631, 1843, 161, 2, 67, "Section"],
Cell[101795, 1847, 1164, 19, 150, "Text"],
Cell[CellGroupData[{
Cell[102984, 1870, 130, 2, 51, "Code"],
Cell[103117, 1874, 280, 7, 55, "Output"]
}, Open  ]],
Cell[103412, 1884, 439, 9, 31, "Text"],
Cell[CellGroupData[{
Cell[103876, 1897, 138, 2, 51, "Code"],
Cell[104017, 1901, 413, 11, 209, "Output"]
}, Open  ]],
Cell[104445, 1915, 826, 18, 51, "Text"],
Cell[CellGroupData[{
Cell[105296, 1937, 625, 12, 64, "Item"],
Cell[105924, 1951, 906, 16, 82, "Item"],
Cell[106833, 1969, 607, 12, 64, "Item"]
}, Open  ]]
}, Open  ]],
Cell[107467, 1985, 212, 3, 67, "Section"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
